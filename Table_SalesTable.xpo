Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: DBT

; Microsoft Dynamics AX Table : SalesTable unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #SalesTable
    PROPERTIES
      Name                #SalesTable
      Label               #@SYS25193
      SearchLinkRefName   #EPSalesTableInfo
      TitleField1         #SalesId
      TitleField2         #SalesName
      ConfigurationKey    #LogisticsBasic
      SecurityKey         #CustTables
      CacheLookup         #NotInTTS
      CreateRecIdIndex    #Yes
      TableGroup          #WorksheetHeader
      PrimaryIndex        #SalesIdx
      ClusterIndex        #SalesIdx
      AnalysisVisibility  #High
      ModifiedBy          #Yes
      CreatedDateTime     #Yes
      CreatedBy           #Yes
      DeveloperDocumentation  #@SYS124484
    ENDPROPERTIES
    
    FIELDS
      FIELD #SalesId
        STRING
        PROPERTIES
          Name                #SalesId
          Mandatory           #Yes
          AllowEdit           #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesIdBase
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #SalesName
        STRING
        PROPERTIES
          Name                #SalesName
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesName
              #
            ENDARRAY
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #Reservation
        ENUM
        PROPERTIES
          Name                #Reservation
          Table               #SalesTable
          EnumType            #ItemReservation
        ENDPROPERTIES
        
      FIELD #CustAccount
        STRING
        PROPERTIES
          Name                #CustAccount
          HelpText            #@SYS15261
          Mandatory           #Yes
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustAccount
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InvoiceAccount
        STRING
        PROPERTIES
          Name                #InvoiceAccount
          HelpText            #@SYS518
          Mandatory           #Yes
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustInvoiceAccount
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #DeliveryDate
        DATE
        PROPERTIES
          Name                #DeliveryDate
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesShippingDate
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #DeliveryAddress
        STRING
        PROPERTIES
          Name                #DeliveryAddress
          Label               #@SYS7924
          HelpText            #@SYS27762
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #Addressing
              #
            ENDARRAY
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #URL
        STRING
        PROPERTIES
          Name                #URL
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #URL
              #
            ENDARRAY
          StringSize          #255
        ENDPROPERTIES
        
      FIELD #PurchOrderFormNum
        STRING
        PROPERTIES
          Name                #PurchOrderFormNum
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustPurchaseOrder
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #SalesTaker
        STRING
        PROPERTIES
          Name                #SalesTaker
          Label               #@SYS4466
          HelpText            #@SYS2451
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #EmplId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #SalesGroup
        STRING
        PROPERTIES
          Name                #SalesGroup
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CommissSalesGroup
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #FreightSlipType
        ENUM
        PROPERTIES
          Name                #FreightSlipType
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustFreightSlipType
              #
            ENDARRAY
          EnumType            #FreightSlipType
        ENDPROPERTIES
        
      FIELD #DocumentStatus
        ENUM
        PROPERTIES
          Name                #DocumentStatus
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #SalesTable
          EnumType            #DocumentStatus
        ENDPROPERTIES
        
      FIELD #InterCompanyOriginalSalesId
        STRING
        PROPERTIES
          Name                #InterCompanyOriginalSalesId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InterCompanyOriginalSalesId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #CurrencyCode
        STRING
        PROPERTIES
          Name                #CurrencyCode
          HelpText            #@SYS15068
          Mandatory           #Yes
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustCurrencyCode
              #
            ENDARRAY
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #Payment
        STRING
        PROPERTIES
          Name                #Payment
          Label               #@SYS828
          HelpText            #@SYS8004
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustPaymTermId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #CashDisc
        STRING
        PROPERTIES
          Name                #CashDisc
          HelpText            #@SYS851
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustCashDiscCode
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #TaxGroup
        STRING
        PROPERTIES
          Name                #TaxGroup
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #TaxGroup
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #LineDisc
        STRING
        PROPERTIES
          Name                #LineDisc
          HelpText            #@SYS7237
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustLineDiscCode
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #CustGroup
        STRING
        PROPERTIES
          Name                #CustGroup
          HelpText            #@SYS16729
          Mandatory           #Yes
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustGroupId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #DiscPercent
        REAL
        PROPERTIES
          Name                #DiscPercent
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesEndDiscPct
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #InterCompanyOriginalCustAccount
        STRING
        PROPERTIES
          Name                #InterCompanyOriginalCustAccount
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InterCompanyOriginalCustAccount
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Dimension
        STRING
        PROPERTIES
          Name                #Dimension
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #Dimension
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #PriceGroupId
        STRING
        PROPERTIES
          Name                #PriceGroupId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustPriceGroup
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #MultiLineDisc
        STRING
        PROPERTIES
          Name                #MultiLineDisc
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustMultiLineDiscCode
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #EndDisc
        STRING
        PROPERTIES
          Name                #EndDisc
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustEndDiscCode
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #CustomerRef
        STRING
        PROPERTIES
          Name                #CustomerRef
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustRef
              #
            ENDARRAY
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #CountyOrigDest
        STRING
        PROPERTIES
          Name                #CountyOrigDest
          Table               #SalesTable
          AnalysisVisibility  #Low
          ExtendedDataType    
            ARRAY 
              #AddressCountyOrigDest
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Listcode
        ENUM
        PROPERTIES
          Name                #Listcode
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ListcodeId
              #
            ENDARRAY
          EnumType            #Listcode
        ENDPROPERTIES
        
      FIELD #DlvTerm
        STRING
        PROPERTIES
          Name                #DlvTerm
          HelpText            #@SYS2036
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustDlvTermId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #DlvMode
        STRING
        PROPERTIES
          Name                #DlvMode
          HelpText            #@SYS1529
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustDlvModeId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #PurchId
        STRING
        PROPERTIES
          Name                #PurchId
          HelpText            #@SYS10442
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #PurchId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #SalesStatus
        ENUM
        PROPERTIES
          Name                #SalesStatus
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #SalesTable
          EnumType            #SalesStatus
        ENDPROPERTIES
        
      FIELD #MarkupGroup
        STRING
        PROPERTIES
          Name                #MarkupGroup
          HelpText            #@SYS5822
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustMarkupGroupId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #SalesType
        ENUM
        PROPERTIES
          Name                #SalesType
          Table               #SalesTable
          EnumType            #SalesType
        ENDPROPERTIES
        
      FIELD #SalesPoolId
        STRING
        PROPERTIES
          Name                #SalesPoolId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesPoolId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #PostingProfile
        STRING
        PROPERTIES
          Name                #PostingProfile
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustPostingProfile
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #TransactionCode
        STRING
        PROPERTIES
          Name                #TransactionCode
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #IntrastatTransactionCodeId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #InterCompanyAutoCreateOrders
        ENUM
        PROPERTIES
          Name                #InterCompanyAutoCreateOrders
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InterCompanyAutoCreateOrders
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanyDirectDelivery
        ENUM
        PROPERTIES
          Name                #InterCompanyDirectDelivery
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InterCompanyDirectDelivery
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanyDirectDeliveryOrig
        ENUM
        PROPERTIES
          Name                #InterCompanyDirectDeliveryOrig
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InterCompanyDirectDelivery
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #DeliveryZipCode
        STRING
        PROPERTIES
          Name                #DeliveryZipCode
          HelpText            #@SYS17884
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #AddressZipCodeId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #DeliveryCounty
        STRING
        PROPERTIES
          Name                #DeliveryCounty
          HelpText            #@SYS17885
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #AddressCountyId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #DeliveryCountryRegionId
        STRING
        PROPERTIES
          Name                #DeliveryCountryRegionId
          HelpText            #@SYS17886
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #AddressCountryRegionId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #SettleVoucher
        ENUM
        PROPERTIES
          Name                #SettleVoucher
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesSettlementType
              #
            ENDARRAY
          EnumType            #SettlementType
        ENDPROPERTIES
        
      FIELD #DeliveryState
        STRING
        PROPERTIES
          Name                #DeliveryState
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #AddressStateId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #EnterpriseNumber
        STRING
        PROPERTIES
          Name                #EnterpriseNumber
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #TaxEnterpriseNumber
              #
            ENDARRAY
          StringSize          #50
        ENDPROPERTIES
        
      FIELD #InterCompanyAllowIndirectCreation
        ENUM
        PROPERTIES
          Name                #InterCompanyAllowIndirectCreation
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InterCompanyAllowIndirectCreation
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanyAllowIndirectCreationOrig
        ENUM
        PROPERTIES
          Name                #InterCompanyAllowIndirectCreationOrig
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InterCompanyAllowIndirectCreation
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #DeliveryName
        STRING
        PROPERTIES
          Name                #DeliveryName
          Label               #@SYS22058
          HelpText            #@SYS17217
          GroupPrompt         #@SYS7399
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustName
              #
            ENDARRAY
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #OneTimeCustomer
        ENUM
        PROPERTIES
          Name                #OneTimeCustomer
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #OneTimeCustomer
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CovStatus
        INT
        PROPERTIES
          Name                #CovStatus
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CovStatus
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #CommissionGroup
        STRING
        PROPERTIES
          Name                #CommissionGroup
          Label               #@SYS11904
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CommissCustomerGroup
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #PaymentSched
        STRING
        PROPERTIES
          Name                #PaymentSched
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #PaymSchedId
              #
            ENDARRAY
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #InterCompanyOrigin
        ENUM
        PROPERTIES
          Name                #InterCompanyOrigin
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #SalesTable
          EnumType            #InterCompanyOrigin
        ENDPROPERTIES
        
      FIELD #Email
        STRING
        PROPERTIES
          Name                #Email
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #Email
              #
            ENDARRAY
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #FreightZone
        STRING
        PROPERTIES
          Name                #FreightZone
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustFreightZoneId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #ReturnItemNum
        STRING
        PROPERTIES
          Name                #ReturnItemNum
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesReturnItemNum
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #CashDiscPercent
        REAL
        PROPERTIES
          Name                #CashDiscPercent
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #DiscPct
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #ContactPersonId
        STRING
        PROPERTIES
          Name                #ContactPersonId
          HelpText            #@SYS26087
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ContactPersonId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Deadline
        DATE
        PROPERTIES
          Name                #Deadline
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesDeadline
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #ProjId
        STRING
        PROPERTIES
          Name                #ProjId
          AllowEdit           #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ProjId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #InventLocationId
        STRING
        PROPERTIES
          Name                #InventLocationId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesInventLocationId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #AddressRefTableId
        INT
        PROPERTIES
          Name                #AddressRefTableId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #AddressRefTableId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #VATNum
        STRING
        PROPERTIES
          Name                #VATNum
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #VATNumJournal
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Port
        STRING
        PROPERTIES
          Name                #Port
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #IntrastatPortId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #InclTax
        ENUM
        PROPERTIES
          Name                #InclTax
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InclTax
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #EInvoiceLineSpec
        ENUM
        PROPERTIES
          Name                #EInvoiceLineSpec
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #EInvoiceLineSpecific
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #NumberSequenceGroup
        STRING
        PROPERTIES
          Name                #NumberSequenceGroup
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #NumberSequenceGroupId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #FixedExchRate
        REAL
        PROPERTIES
          Name                #FixedExchRate
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesFixedExchRate
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #LanguageId
        STRING
        PROPERTIES
          Name                #LanguageId
          HelpText            #@SYS8305
          Mandatory           #Yes
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustLanguageId
              #
            ENDARRAY
          StringSize          #7
        ENDPROPERTIES
        
      FIELD #AutoSummaryModuleType
        ENUM
        PROPERTIES
          Name                #AutoSummaryModuleType
          Label               #@SYS57738
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #SalesTable
          EnumType            #ModuleCustSales
        ENDPROPERTIES
        
      FIELD #GiroType
        ENUM
        PROPERTIES
          Name                #GiroType
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #PaymentStubInvoiceId
              #
            ENDARRAY
          EnumType            #PaymentStub
        ENDPROPERTIES
        
      FIELD #SalesOriginId
        STRING
        PROPERTIES
          Name                #SalesOriginId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesOriginId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Estimate
        REAL
        PROPERTIES
          Name                #Estimate
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesEstimateGross
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #Touched
        ENUM
        PROPERTIES
          Name                #Touched
          SaveContents        #No
          Visible             #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #TradeTouched
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Transport
        STRING
        PROPERTIES
          Name                #Transport
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #IntrastatTransport
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #DEL_PrintModuleType
        ENUM
        PROPERTIES
          Name                #DEL_PrintModuleType
          Label               #@SYS54502
          Visible             #No
          ConfigurationKey    #SysDeletedObjects41
          Table               #SalesTable
          EnumType            #DEL_ModuleCustSalesParameters
        ENDPROPERTIES
        
      FIELD #PaymMode
        STRING
        PROPERTIES
          Name                #PaymMode
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustPaymMode
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #PaymSpec
        STRING
        PROPERTIES
          Name                #PaymSpec
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustPaymSpec
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #FixedDueDate
        DATE
        PROPERTIES
          Name                #FixedDueDate
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesFixedDueDate
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #DeliveryCity
        STRING
        PROPERTIES
          Name                #DeliveryCity
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #AddressCity
              #
            ENDARRAY
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #DeliveryStreet
        STRING
        PROPERTIES
          Name                #DeliveryStreet
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #AddressStreet
              #
            ENDARRAY
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #ExportReason
        STRING
        PROPERTIES
          Name                #ExportReason
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesExportReason
              #
            ENDARRAY
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #StatProcId
        STRING
        PROPERTIES
          Name                #StatProcId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #IntrastatProcId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #BankCentralBankPurposeText
        STRING
        PROPERTIES
          Name                #BankCentralBankPurposeText
          ConfigurationKey    #CRSENorway
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #BankCentralBankPurposeText
              #
            ENDARRAY
          StringSize          #140
        ENDPROPERTIES
        
      FIELD #DEL_RefDlvZipCode
        INT64
        PROPERTIES
          Name                #DEL_RefDlvZipCode
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #SysDeletedObjects40
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #RefRecId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #InterCompanyCompanyId
        STRING
        PROPERTIES
          Name                #InterCompanyCompanyId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InterCompanyCompanyId
              #
            ENDARRAY
          StringSize          #4
        ENDPROPERTIES
        
      FIELD #InterCompanyPurchId
        STRING
        PROPERTIES
          Name                #InterCompanyPurchId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InterCompanyPurchId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InterCompanyOrder
        ENUM
        PROPERTIES
          Name                #InterCompanyOrder
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InterCompanyCustomer
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #DlvReason
        STRING
        PROPERTIES
          Name                #DlvReason
          HelpText            #@SYS79297
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #DlvReasonId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #QuotationId
        STRING
        PROPERTIES
          Name                #QuotationId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #QuotationId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #DEL_DeliveryDateControl
        ENUM
        PROPERTIES
          Name                #DEL_DeliveryDateControl
          ConfigurationKey    #SysDeletedObjects41
          Table               #SalesTable
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ReceiptDateRequested
        DATE
        PROPERTIES
          Name                #ReceiptDateRequested
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesReceiptDateRequested
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #ReceiptDateConfirmed
        DATE
        PROPERTIES
          Name                #ReceiptDateConfirmed
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesReceiptDateConfirmed
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #ShippingDateRequested
        DATE
        PROPERTIES
          Name                #ShippingDateRequested
          Mandatory           #Yes
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesShippingDateRequested
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #ShippingDateConfirmed
        DATE
        PROPERTIES
          Name                #ShippingDateConfirmed
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesShippingDateConfirmed
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #BankCentralBankPurposeCode
        STRING
        PROPERTIES
          Name                #BankCentralBankPurposeCode
          ConfigurationKey    #CRSENorway
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #BankCentralBankPurposeCode
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #DEL_CorrectiveReason
        STRING
        PROPERTIES
          Name                #DEL_CorrectiveReason
          Visible             #No
          ConfigurationKey    #SysDeletedObjects40
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustVendCorrectiveReason
              #
            ENDARRAY
          StringSize          #(Memo)
        ENDPROPERTIES
        
      FIELD #DEL_CorrectedInvoiceId
        STRING
        PROPERTIES
          Name                #DEL_CorrectedInvoiceId
          Visible             #No
          ConfigurationKey    #SysDeletedObjects40
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustVendCorrectedInvoiceId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #DEL_ParentSalesId
        STRING
        PROPERTIES
          Name                #DEL_ParentSalesId
          Visible             #No
          ConfigurationKey    #SysDeletedObjects40
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesIdBase
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #EInvoiceAccountCode
        STRING
        PROPERTIES
          Name                #EInvoiceAccountCode
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #EInvoiceAccountCode
              #
            ENDARRAY
          StringSize          #35
        ENDPROPERTIES
        
      FIELD #ItemTagging
        ENUM
        PROPERTIES
          Name                #ItemTagging
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #RFIDItemTagging
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CaseTagging
        ENUM
        PROPERTIES
          Name                #CaseTagging
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #RFIDCaseTagging
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #PalletTagging
        ENUM
        PROPERTIES
          Name                #PalletTagging
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #RFIDPalletTagging
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #AddressRefRecId
        INT64
        PROPERTIES
          Name                #AddressRefRecId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #AddressRefRecId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #SkipUpdate
        ENUM
        PROPERTIES
          Name                #SkipUpdate
          SaveContents        #No
          Visible             #No
          Table               #SalesTable
          EnumType            #InterCompanySkipUpdate
        ENDPROPERTIES
        
      FIELD #CustInvoiceId
        STRING
        PROPERTIES
          Name                #CustInvoiceId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CustInvoiceId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InventSiteId
        STRING
        PROPERTIES
          Name                #InventSiteId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #InventSiteId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #CreditCardCustRefId
        INT64
        PROPERTIES
          Name                #CreditCardCustRefId
          Label               #@SYS71999
          HelpText            #@SYS117745
          ConfigurationKey    #CreditCard
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #RefRecId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #ShipCarrierAccount
        STRING
        PROPERTIES
          Name                #ShipCarrierAccount
          ConfigurationKey    #ShipCarrier
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ShipCarrierAccount
              #
            ENDARRAY
          StringSize          #25
        ENDPROPERTIES
        
      FIELD #ShipCarrierId
        STRING
        PROPERTIES
          Name                #ShipCarrierId
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #ShipCarrier
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ShipCarrierId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #ShipCarrierFuelSurcharge
        ENUM
        PROPERTIES
          Name                #ShipCarrierFuelSurcharge
          ConfigurationKey    #ShipCarrier
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ShipCarrierFuelSurcharge
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ShipCarrierBlindShipment
        ENUM
        PROPERTIES
          Name                #ShipCarrierBlindShipment
          ConfigurationKey    #ShipCarrier
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ShipCarrierBlindShipment
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CreditCardProcessorTransactionId
        STRING
        PROPERTIES
          Name                #CreditCardProcessorTransactionId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CreditCardProcessorTransactionId
              #
            ENDARRAY
          StringSize          #48
        ENDPROPERTIES
        
      FIELD #ShipCarrierDeliveryContact
        STRING
        PROPERTIES
          Name                #ShipCarrierDeliveryContact
          Label               #@SYS116731
          HelpText            #@SYS117746
          ConfigurationKey    #ShipCarrier
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #Name
              #
            ENDARRAY
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #CreditCardApprovalAmount
        REAL
        PROPERTIES
          Name                #CreditCardApprovalAmount
          Label               #@SYS116984
          HelpText            #@SYS117747
          ConfigurationKey    #CreditCard
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #AmountMST
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #CreditCardAuthorization
        STRING
        PROPERTIES
          Name                #CreditCardAuthorization
          ConfigurationKey    #CreditCard
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #CreditCardAuthorization
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ReturnDeadline
        DATE
        PROPERTIES
          Name                #ReturnDeadline
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ReturnDeadline
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #ReturnReplacementId
        STRING
        PROPERTIES
          Name                #ReturnReplacementId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ReturnReplacementId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ReturnStatus
        ENUM
        PROPERTIES
          Name                #ReturnStatus
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #SalesTable
          EnumType            #ReturnStatusHeader
        ENDPROPERTIES
        
      FIELD #ReturnReasonCodeId
        STRING
        PROPERTIES
          Name                #ReturnReasonCodeId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ReturnReasonCodeId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #CreditCardAuthorizationError
        ENUM
        PROPERTIES
          Name                #CreditCardAuthorizationError
          Label               #@SYS117748
          HelpText            #@SYS117749
          ConfigurationKey    #CreditCard
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #NoYesId
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ShipCarrierAccountCode
        STRING
        PROPERTIES
          Name                #ShipCarrierAccountCode
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #ShipCarrier
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ShipCarrierAccountCode
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ReturnReplacementCreated
        ENUM
        PROPERTIES
          Name                #ReturnReplacementCreated
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ReturnReplacementCreated
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ShipCarrierDlvType
        ENUM
        PROPERTIES
          Name                #ShipCarrierDlvType
          Table               #SalesTable
          EnumType            #ShipCarrierDlvType
        ENDPROPERTIES
        
      FIELD #ATPInclPlannedOrders
        ENUM
        PROPERTIES
          Name                #ATPInclPlannedOrders
          Visible             #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesATPInclPlannedOrders
              #
            ENDARRAY
          EnumType            #boolean
        ENDPROPERTIES
        
      FIELD #ATPTimeFence
        INT
        PROPERTIES
          Name                #ATPTimeFence
          Visible             #No
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #SalesATPTimeFence
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #DeliveryDateControlType
        ENUM
        PROPERTIES
          Name                #DeliveryDateControlType
          Table               #SalesTable
          EnumType            #SalesDeliveryDateControlType
        ENDPROPERTIES
        
      FIELD #ShipCarrierExpeditedShipment
        ENUM
        PROPERTIES
          Name                #ShipCarrierExpeditedShipment
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ShipCarrierExpeditedShipment
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ShipCarrierResidential
        ENUM
        PROPERTIES
          Name                #ShipCarrierResidential
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #ShipCarrierResidentialDest
              #
            ENDARRAY
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #SalesResponsible
        STRING
        PROPERTIES
          Name                #SalesResponsible
          Label               #@SYS81476
          HelpText            #@SYS81035
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #EmplId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #SalesUnitId
        STRING
        PROPERTIES
          Name                #SalesUnitId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #smmSalesUnitId
              #
            ENDARRAY
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #smmSalesAmountTotal
        REAL
        PROPERTIES
          Name                #smmSalesAmountTotal
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #smmSalesAmountTotal
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #smmCampaignId
        STRING
        PROPERTIES
          Name                #smmCampaignId
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #smmCampaignId
              #
            ENDARRAY
        ENDPROPERTIES
        
      FIELD #MSC_TransTxt
        STRING
        PROPERTIES
          Name                #MSC_TransTxt
          Table               #SalesTable
          ExtendedDataType    
            ARRAY 
              #TransTxt
              #
            ENDARRAY
          StringSize          #60
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #SalesId
          #SalesName
          #CustAccount
          #InvoiceAccount
          #SalesStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AccountsReceivable
        PROPERTIES
          Name                #AccountsReceivable
          Label               #@SYS25196
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustAccount
          #InvoiceAccount
          #OneTimeCustomer
          #ContactPersonId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressDisplay
        PROPERTIES
          Name                #AddressDisplay
          Label               #@SYS9362
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryAddress
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressLookup
        PROPERTIES
          Name                #AddressLookup
          Label               #@SYS88672
        ENDPROPERTIES
        
        GROUPFIELDS
          #SalesId
          #CustAccount
          #InvoiceAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressReference
        PROPERTIES
          Name                #AddressReference
          Label               #@SYS88679
        ENDPROPERTIES
        
        GROUPFIELDS
          #AddressRefTableId
          #AddressRefRecId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Administration
        PROPERTIES
          Name                #Administration
          Label               #@SYS9853
        ENDPROPERTIES
        
        GROUPFIELDS
          #SalesTaker
          #SalesPoolId
          #LanguageId
          #SalesUnitId
          #SalesResponsible
          #SalesOriginId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Campaign
        PROPERTIES
          Name                #Campaign
          Label               #@SYS80187
        ENDPROPERTIES
        
        GROUPFIELDS
          #smmCampaignId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CarrierInfo
        PROPERTIES
          Name                #CarrierInfo
          Label               #@SYS50722
        ENDPROPERTIES
        
        GROUPFIELDS
          #ShipCarrierId
          #ShipCarrierAccountCode
          #ShipCarrierAccount
          #ShipCarrierFuelSurcharge
          #ShipCarrierExpeditedShipment
          #ShipCarrierResidential
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CarrierIssues
        PROPERTIES
          Name                #CarrierIssues
          Label               #@SYS116986
        ENDPROPERTIES
        
        GROUPFIELDS
          #SalesId
          #CustAccount
          #InvoiceAccount
          #SalesStatus
          #CurrencyCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Commission
        PROPERTIES
          Name                #Commission
          Label               #@SYS2489
        ENDPROPERTIES
        
        GROUPFIELDS
          #SalesGroup
          #CommissionGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ContactInfo
        PROPERTIES
          Name                #ContactInfo
          Label               #@SYS21663
        ENDPROPERTIES
        
        GROUPFIELDS
          #URL
          #Email
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CreditCard
        PROPERTIES
          Name                #CreditCard
          Label               #@SYS101746
        ENDPROPERTIES
        
        GROUPFIELDS
          #editCreditCard
          #CreditCardAuthorization
          #CreditCardApprovalAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Currency
        PROPERTIES
          Name                #Currency
          Label               #@SYS7572
        ENDPROPERTIES
        
        GROUPFIELDS
          #CurrencyCode
          #FixedExchRate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CurrencyShow
        PROPERTIES
          Name                #CurrencyShow
          Label               #@SYS7572
        ENDPROPERTIES
        
        GROUPFIELDS
          #CurrencyCode
          #editFixedExchRate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CustInvoice
        PROPERTIES
          Name                #CustInvoice
          Label               #@SYS14204
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustInvoiceId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Customer
        PROPERTIES
          Name                #Customer
          Label               #@SYS11779
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustAccount
          #OneTimeCustomer
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Delivery
        PROPERTIES
          Name                #Delivery
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReceiptDateRequested
          #ShippingDateRequested
          #ReceiptDateConfirmed
          #ShippingDateConfirmed
          #DeliveryDateControlType
          #DlvMode
          #DlvTerm
          #DlvReason
          #ExportReason
          #ShipCarrierBlindShipment
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeliveryAddition
        PROPERTIES
          Name                #DeliveryAddition
          Label               #@SYS88262
        ENDPROPERTIES
        
        GROUPFIELDS
          #DlvTerm
          #ShipCarrierAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeliveryAddress
        PROPERTIES
          Name                #DeliveryAddress
          Label               #@SYS7924
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryName
          #DeliveryStreet
          #DeliveryZipCode
          #DeliveryCity
          #DeliveryCounty
          #DeliveryState
          #DeliveryCountryRegionId
          #ShipCarrierDeliveryContact
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Dimension
        PROPERTIES
          Name                #Dimension
          Label               #@SYS5951
        ENDPROPERTIES
        
        GROUPFIELDS
          #Dimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Discount
        PROPERTIES
          Name                #Discount
          Label               #@SYS11829
        ENDPROPERTIES
        
        GROUPFIELDS
          #LineDisc
          #MultiLineDisc
          #EndDisc
          #DiscPercent
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DiscountMiscCharges
        PROPERTIES
          Name                #DiscountMiscCharges
          Label               #@SYS22031
        ENDPROPERTIES
        
        GROUPFIELDS
          #PriceGroupId
          #MultiLineDisc
          #EndDisc
          #DiscPercent
          #LineDisc
          #MarkupGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EInvoice
        PROPERTIES
          Name                #EInvoice
          Label               #@SYS100769
        ENDPROPERTIES
        
        GROUPFIELDS
          #EInvoiceLineSpec
          #EInvoiceAccountCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Emails
        PROPERTIES
          Name                #Emails
          Label               #@SYS96646
        ENDPROPERTIES
        
        GROUPFIELDS
          #Email
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPMiniPage
        PROPERTIES
          Name                #EPMiniPage
          Label               #@SYS108232
        ENDPROPERTIES
        
        GROUPFIELDS
          #SalesId
          #SalesName
          #SalesStatus
          #ContactPersonId
          #smmSalesAmountTotal
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ExternalReference
        PROPERTIES
          Name                #ExternalReference
          Label               #@SYS21697
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchOrderFormNum
          #CustomerRef
          #ReturnItemNum
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ForeignTrade
        PROPERTIES
          Name                #ForeignTrade
          Label               #@SYS27650
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransactionCode
          #Transport
          #Port
          #StatProcId
          #Listcode
          #CountyOrigDest
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #GiroMoneyTransferSlip
        PROPERTIES
          Name                #GiroMoneyTransferSlip
          Label               #@SYS2723
        ENDPROPERTIES
        
        GROUPFIELDS
          #GiroType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #HeaderToLineUpdate
        PROPERTIES
          Name                #HeaderToLineUpdate
          Label               #@SYS62436
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustAccount
          #SalesGroup
          #TaxGroup
          #Dimension
          #InventLocationId
          #Reservation
          #TransactionCode
          #Port
          #StatProcId
          #PriceGroupId
          #LineDisc
          #MarkupGroup
          #DeliveryDate
          #LanguageId
          #Transport
          #DlvMode
          #ShipCarrierAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #SalesId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Intercompany
        PROPERTIES
          Name                #Intercompany
          Label               #@SYS75319
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyOrder
          #InterCompanyCompanyId
          #InterCompanyPurchId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyAdmin
        PROPERTIES
          Name                #InterCompanyAdmin
          Label               #@SYS74106
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyAutoCreateOrders
          #InterCompanyDirectDelivery
          #interCompanyOriginDisplay
          #InterCompanyAllowIndirectCreation
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyOriginal
        PROPERTIES
          Name                #InterCompanyOriginal
          Label               #@SYS93838
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyOriginalSalesId
          #InterCompanyOriginalCustAccount
          #InterCompanyDirectDeliveryOrig
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyReturn
        PROPERTIES
          Name                #InterCompanyReturn
          Label               #@SYS120343
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnReplacementCreated
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Inventory
        PROPERTIES
          Name                #Inventory
          Label               #@SYS981
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventSiteId
          #InventLocationId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #NotificationToTheCentralBank
        PROPERTIES
          Name                #NotificationToTheCentralBank
          Label               #@SYS67156
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankCentralBankPurposeCode
          #BankCentralBankPurposeText
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Other
        PROPERTIES
          Name                #Other
          Label               #@SYS1284
        ENDPROPERTIES
        
        GROUPFIELDS
          #CreditCardCustRefId
          #CreditCardProcessorTransactionId
          #CreditCardAuthorizationError
          #ShipCarrierDlvType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Overview
        PROPERTIES
          Name                #Overview
          Label               #@SYS9039
        ENDPROPERTIES
        
        GROUPFIELDS
          #SalesId
          #CustAccount
          #InvoiceAccount
          #SalesType
          #SalesStatus
          #CurrencyCode
          #ProjId
          #salesIdBlanket
          #qualityOrderStatusDisplay
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Payment
        PROPERTIES
          Name                #Payment
          Label               #@SYS828
        ENDPROPERTIES
        
        GROUPFIELDS
          #Payment
          #FixedDueDate
          #PaymMode
          #PaymSpec
          #PaymentSched
          #CashDisc
          #CashDiscPercent
          #editCreditCard
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Posting
        PROPERTIES
          Name                #Posting
          Label               #@SYS5943
        ENDPROPERTIES
        
        GROUPFIELDS
          #PostingProfile
          #SettleVoucher
          #NumberSequenceGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Project
        PROPERTIES
          Name                #Project
          Label               #@SYS4534
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Quotation
        PROPERTIES
          Name                #Quotation
          Label               #@SYS5864
        ENDPROPERTIES
        
        GROUPFIELDS
          #QuotationId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Reservation
        PROPERTIES
          Name                #Reservation
          Label               #@SYS7669
        ENDPROPERTIES
        
        GROUPFIELDS
          #Reservation
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Return
        PROPERTIES
          Name                #Return
          Label               #@SYS24700
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnReasonCodeId
          #ReturnStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ReturnItemNum
        PROPERTIES
          Name                #ReturnItemNum
          Label               #@SYS104082
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnItemNum
          #CustAccount
          #ReturnStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ReturnListPage
        PROPERTIES
          Name                #ReturnListPage
          Label               #@SYS9039
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnItemNum
          #CustAccount
          #InvoiceAccount
          #ReturnReasonCodeId
          #ReturnDeadline
          #ReturnStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ReturnOrder
        PROPERTIES
          Name                #ReturnOrder
          Label               #@SYS105841
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnItemNum
          #SalesId
          #ReturnReasonCodeId
          #ReturnDeadline
          #CurrencyCode
          #CustAccount
          #InvoiceAccount
          #editContactPersonName
          #ContactPersonId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ReturnReplacement
        PROPERTIES
          Name                #ReturnReplacement
          Label               #@SYS84714
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnReplacementId
          #ReturnReplacementCreated
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #RFIDTagging
        PROPERTIES
          Name                #RFIDTagging
          Label               #@SYS90171
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemTagging
          #CaseTagging
          #PalletTagging
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SalesAmountTotal
        PROPERTIES
          Name                #SalesAmountTotal
          Label               #@SYS23862
        ENDPROPERTIES
        
        GROUPFIELDS
          #smmSalesAmountTotal
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SalesOrderTable
        PROPERTIES
          Name                #SalesOrderTable
          Label               #@SYS12847
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnItemNum
          #CovStatus
          #SalesName
          #SalesType
          #MarkupGroup
          #DocumentStatus
          #CustGroup
          #PostingProfile
          #SettleVoucher
          #SalesStatus
          #Reservation
          #PurchId
          #Deadline
          #Estimate
          #Touched
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SalesTax
        PROPERTIES
          Name                #SalesTax
          Label               #@SYS5878
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxGroup
          #VATNum
          #EnterpriseNumber
          #InclTax
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Status
        PROPERTIES
          Name                #Status
          Label               #@SYS25587
        ENDPROPERTIES
        
        GROUPFIELDS
          #SalesStatus
          #DocumentStatus
          #Deadline
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SummaryNumber
        PROPERTIES
          Name                #SummaryNumber
          Label               #*** OUTDATED ***
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SummaryOrder
        PROPERTIES
          Name                #SummaryOrder
          Label               #@SYS24079
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SummaryUpdate
        PROPERTIES
          Name                #SummaryUpdate
          Label               #@SYS57755
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustAccount
          #InvoiceAccount
          #SalesType
          #CurrencyCode
          #FixedExchRate
          #ContactPersonId
          #LanguageId
          #Dimension
          #SalesPoolId
          #PostingProfile
          #NumberSequenceGroup
          #VATNum
          #InclTax
          #SalesGroup
          #CommissionGroup
          #DlvMode
          #DlvTerm
          #FreightZone
          #FreightSlipType
          #PriceGroupId
          #MultiLineDisc
          #EndDisc
          #DiscPercent
          #LineDisc
          #CashDisc
          #Payment
          #PaymentSched
          #TransactionCode
          #Listcode
          #InventLocationId
          #PaymMode
          #PaymSpec
          #FixedDueDate
          #InterCompanyCompanyId
          #InterCompanyOriginalCustAccount
          #InterCompanyDirectDeliveryOrig
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SummaryUpdateParameters
        PROPERTIES
          Name                #SummaryUpdateParameters
          Label               #@SYS57738
        ENDPROPERTIES
        
        GROUPFIELDS
          #AutoSummaryModuleType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SummaryUpdateShow
        PROPERTIES
          Name                #SummaryUpdateShow
          Label               #@SYS57755
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustAccount
          #InvoiceAccount
          #SalesType
          #CurrencyCode
          #FixedExchRate
          #ContactPersonId
          #LanguageId
          #Dimension
          #SalesPoolId
          #PostingProfile
          #NumberSequenceGroup
          #VATNum
          #InclTax
          #SalesGroup
          #CommissionGroup
          #DlvMode
          #DlvTerm
          #FreightZone
          #FreightSlipType
          #PriceGroupId
          #MultiLineDisc
          #EndDisc
          #DiscPercent
          #LineDisc
          #CashDisc
          #Payment
          #PaymentSched
          #TransactionCode
          #Listcode
          #InventLocationId
          #PaymMode
          #PaymSpec
          #FixedDueDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Transport
        PROPERTIES
          Name                #Transport
          Label               #@SYS3843
        ENDPROPERTIES
        
        GROUPFIELDS
          #FreightZone
          #FreightSlipType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #WebCategoryBrowsing
        PROPERTIES
          Name                #WebCategoryBrowsing
          Label               #@SYS74258
        ENDPROPERTIES
        
        GROUPFIELDS
          #SalesStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #WebCategoryBrowsingReturn
        PROPERTIES
          Name                #WebCategoryBrowsingReturn
          Label               #@SYS74258
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #WebDelivery
        PROPERTIES
          Name                #WebDelivery
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryName
          #DeliveryAddress
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #SalesIdx
      PROPERTIES
        Name                #SalesIdx
        AllowDuplicates     #No
      ENDPROPERTIES
      
      INDEXFIELDS
        #SalesId
      ENDINDEXFIELDS
      
      #CustIdx
      PROPERTIES
        Name                #CustIdx
        AllowDuplicates     #No
      ENDPROPERTIES
      
      INDEXFIELDS
        #CustAccount
        #SalesId
      ENDINDEXFIELDS
      
      #ProjIdIdx
      PROPERTIES
        Name                #ProjIdIdx
        ConfigurationKey    #ProjBasic
      ENDPROPERTIES
      
      INDEXFIELDS
        #ProjId
        #SalesId
      ENDINDEXFIELDS
      
      #StatusCustAccIdx
      PROPERTIES
        Name                #StatusCustAccIdx
      ENDPROPERTIES
      
      INDEXFIELDS
        #SalesStatus
        #CustAccount
      ENDINDEXFIELDS
      
      #InvoiceAccStatusIdx
      PROPERTIES
        Name                #InvoiceAccStatusIdx
      ENDPROPERTIES
      
      INDEXFIELDS
        #InvoiceAccount
        #SalesStatus
      ENDINDEXFIELDS
      
      #ReturnNumIdx
      PROPERTIES
        Name                #ReturnNumIdx
        ConfigurationKey    #ReturnItem
      ENDPROPERTIES
      
      INDEXFIELDS
        #ReturnItemNum
      ENDINDEXFIELDS
      
    ENDINDICES
    REFERENCES
      REFERENCE #AddressCounty
        PROPERTIES
          Name                #AddressCounty
          Table               #AddressCounty
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #DeliveryCountryRegionId
            RelatedField        #CountryRegionId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #DeliveryState
            RelatedField        #StateId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #DeliveryCounty
            RelatedField        #CountyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AddressState
        PROPERTIES
          Name                #AddressState
          Table               #AddressState
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #DeliveryCountryRegionId
            RelatedField        #CountryRegionId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #DeliveryState
            RelatedField        #StateId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Common
        PROPERTIES
          Name                #Common
          Table               #Common
          Validate            #No
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AddressRefRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AddressRefTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CountyOrigDest
        PROPERTIES
          Name                #CountyOrigDest
          Table               #AddressCounty
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CountyOrigDest
            RelatedField        #CountyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CreditCard
        PROPERTIES
          Name                #CreditCard
          Table               #CreditCardCust
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CreditCardCustRefId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustPaymModeSpec
        PROPERTIES
          Name                #CustPaymModeSpec
          Table               #CustPaymModeSpec
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PaymMode
            RelatedField        #PaymMode
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PaymSpec
            RelatedField        #Specification
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MarkupGroup
        PROPERTIES
          Name                #MarkupGroup
          Table               #MarkupGroup
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #MarkupGroup
            RelatedField        #Module
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #MarkupGroup
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchTable
        PROPERTIES
          Name                #PurchTable
          Table               #PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #SalesTable
            Field               #InterCompanyOrder
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #SalesTable
            Field               #InterCompanyCompanyId
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #SalesTable
            Field               #InterCompanyPurchId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PurchId
            RelatedField        #PurchId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchTableInterCompany
        PROPERTIES
          Name                #PurchTableInterCompany
          Table               #PurchTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #SalesTable
            Field               #InterCompanyOrder
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InterCompanyCompanyId
            RelatedField        #dataAreaId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InterCompanyPurchId
            RelatedField        #PurchId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #PrintMgmtDocInstance
      PROPERTIES
        Table               #PrintMgmtDocInstance
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #TaxWorkRegulation
      PROPERTIES
        Table               #TaxWorkRegulation
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #CustPaymSched
      PROPERTIES
        Table               #CustPaymSched
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #DocuRef
      PROPERTIES
        Table               #DocuRef
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #InterCompanyPurchSalesReference
      PROPERTIES
        Table               #InterCompanyPurchSalesReference
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #LedgerCov
      PROPERTIES
        Table               #LedgerCov
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #MarkupTrans
      PROPERTIES
        Table               #MarkupTrans
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #SalesJournalAutoSummary
      PROPERTIES
        Table               #SalesJournalAutoSummary
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #CustVendCreditInvoicingTable
      PROPERTIES
        Table               #CustVendCreditInvoicingTable
        DeleteAction        #Cascade
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      Version: 3
      SOURCE #AccountClearing
        #//BP Deviation documented
        #display LedgerAccount  accountClearing()
        #{
        #    SalesTableType salesTableType;
        #    ;
        #
        #    salesTableType = this.type();
        #    return salesTableType.accountClearing();
        #}
      ENDSOURCE
      SOURCE #AccountCust
        #//BP Deviation documented
        #display LedgerAccount  accountCust()
        #{
        #    SalesTableType  salesTableType;
        #    ;
        #
        #    salesTableType = this.type();
        #    return salesTableType.accountCust();
        #}
      ENDSOURCE
      SOURCE #aifEndpointActionValueMap
        #AifEndpointActionValueMap aifEndpointActionValueMap(boolean _forUpdate = false)
        #{
        #    #InterCompany
        #    AifActionId               defaultSalesOrderAction = #DefaultSalesOrderAction;
        #    AifEndpointActionValueMap aifEndpointActionValueMap;
        #;
        #    if (this.DataAreaId != curext())
        #    {
        #        changecompany(this.DataAreaId)
        #        {
        #            aifEndpointActionValueMap = AifEndpointActionValueMap::find(AifEndpointConstraint::findInterCompanyEndpointId(CustTable::find(this.CustAccount)),defaultSalesOrderAction);
        #        }
        #    }
        #    else
        #    {
        #        aifEndpointActionValueMap = AifEndpointActionValueMap::find(AifEndpointConstraint::findInterCompanyEndpointId(CustTable::find(this.CustAccount)),defaultSalesOrderAction);
        #    }
        #
        #    return aifEndpointActionValueMap;
        #}
        #
      ENDSOURCE
      SOURCE #AmountDelivered
        #//BP Deviation documented
        #server display AmountCur  amountDelivered()
        #{
        #    SalesLine       salesLine;
        #    AmountCur       amountCur = 0;
        #    ;
        #
        #    while select salesLine
        #            index hint SalesLineIdx
        #            where salesLine.SalesId     == this.SalesId
        #    {
        #        amountCur += salesLine.calcLineAmountExclTax(salesLine.SalesQty - salesLine.RemainSalesPhysical);
        #    }
        #
        #    return amountCur;
        #}
      ENDSOURCE
      SOURCE #AmountInvoiced
        #//BP Deviation documented
        #server display AmountCur  amountInvoiced()
        #{
        #    CustInvoiceJour custInvoiceJour;
        #    ;
        #
        #    select sum(InvoiceAmount) from custInvoiceJour
        #              where custInvoiceJour.RefNum  == RefNum::SalesOrder   &&
        #                    custInvoiceJour.SalesId == this.SalesId;
        #
        #    return custInvoiceJour.InvoiceAmount;
        #}
      ENDSOURCE
      SOURCE #amountMST
        #AmountMST amountMST(AmountCur _amountCur, TransDate _exchRateDate = systemdateget())
        #{
        #    return Currency::mstAmount(_amountCur, this.CurrencyCode, _exchRateDate, this.fixedEuroTriangulation(), this.fixedExchRate(), this.fixedExchRateSecondary());
        #}
      ENDSOURCE
      SOURCE #amountOrderedNotInvoiced
        #//BP Deviation documented
        #server display AmountCur amountOrderedNotInvoiced()
        #{
        #    SalesLine  salesLine;
        #    AmountCur  ordered;
        #    ;
        #
        #    while select salesLine
        #            index SalesLineIdx
        #            where salesLine.SalesId     == this.SalesId
        #    {
        #        ordered += salesLine.calcLineAmountExclTax(salesLine.RemainSalesPhysical+salesLine.RemainSalesFinancial);
        #    }
        #
        #    return ordered;
        #}
      ENDSOURCE
      SOURCE #AmountRemainSalesFinancial
        #//BP Deviation documented
        #server display AmountCur  amountRemainSalesFinancial()
        #{
        #    SalesLine       salesLine;
        #    AmountCur       amountCur = 0;
        #    ;
        #
        #    while select salesLine
        #            index hint SalesLineIdx
        #            where salesLine.SalesId     == this.SalesId
        #    {
        #        amountCur += salesLine.calcLineAmountExclTax(salesLine.RemainSalesFinancial);
        #    }
        #
        #    return amountCur;
        #}
      ENDSOURCE
      SOURCE #AmountRemainSalesPhysical
        #//BP Deviation documented
        #server display AmountCur  amountRemainSalesPhysical()
        #{
        #    SalesLine       salesLine;
        #    AmountCur       amountCur = 0;
        #    ;
        #
        #    while select salesLine
        #            index hint SalesLineIdx
        #            where salesLine.SalesId     == this.SalesId
        #    {
        #        amountCur += salesLine.calcLineAmountExclTax(salesLine.RemainSalesPhysical);
        #    }
        #
        #    return amountCur;
        #}
      ENDSOURCE
      SOURCE #AxSalesTable
        #public AxSalesTable axSalesTable()
        #{
        #    AxSalesTable axSalesTable = AxSalesTable::newSalesTable(this);
        #    return axSalesTable;
        #}
        #
      ENDSOURCE
      SOURCE #calcEstimateForced
        #boolean calcEstimateForced()
        #{
        #    this.Touched = NoYes::Yes;
        #
        #    if (this.validateWrite())
        #    {
        #        this.update();
        #    }
        #    else
        #    {
        #        this.reread();
        #        return false;
        #    }
        #
        #    return true;
        #}
        #
      ENDSOURCE
      SOURCE #canBeDirectlyInvoiced
        #/// <summary>
        #/// Determines if the sales order can be directly invoiced via the Process Shipment feature.
        #/// </summary>
        #/// <returns>
        #/// true if the sales order has a payment term of COD or Credit card; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// The Process shipment button is used for COD and credit card transactions.
        #/// If the payment type is a credit card, the button will process the credit card and post the invoice.
        #/// If the payment type is COD, the button with post the invoice.
        #/// The Invoice button is used to post all other transactions (not COD or credit card).
        #/// If the Process Shipment feature was used, the Invoice button will print the invoice again.
        #/// </remarks>
        #boolean canBeDirectlyInvoiced()
        #{
        #    boolean     canBeInvoiced = false;
        #    PaymTerm    paymTerm;
        #    ;
        #
        #    paymTerm = this.payment();
        #    if (paymTerm.CreditCardPaymentType == CreditCardPaymentType::CreditCard ||
        #            paymTerm.PaymMethod == NetCurrent::COD)
        #    {
        #        canBeInvoiced = true;
        #    }
        #
        #    return canBeInvoiced;
        #}
      ENDSOURCE
      SOURCE #cancelPreAuthorization
        #boolean cancelPreAuthorization()
        #{
        #    CreditCardAuthTrans     creditCardAuthTrans2Cancel;
        #    ;
        #
        #    if (!this.RecId)
        #    {
        #        return true;
        #    }
        #
        #    creditCardAuthTrans2Cancel = CreditCardAuthTrans::findValidPreApproval(this.SalesId);
        #    if (!creditCardAuthTrans2Cancel)
        #    {
        #        return true;
        #    }
        #    if (Box::okCancel("@SYS116762", DialogButton::Cancel)== DialogButton::Ok)
        #    {
        #        return CreditCardProcess::doVoidAuth(creditCardAuthTrans2Cancel);
        #    }
        #    else
        #    {
        #        return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #canCustomerBeUpdated
        #boolean canCustomerBeUpdated(DocumentStatus _documentStatus)
        #{
        #    return CustTable::canCustomerBeUpdated(this.CustAccount, this.InvoiceAccount, _documentStatus);
        #}
        #
      ENDSOURCE
      SOURCE #canXMLBeSent
        #public boolean canXMLBeSent()
        #{
        #    boolean             ret;
        #    AifActionId         actionId;
        #    AifEndpointList     endpointList;
        #    AifConstraint       aifConstraint       = new AifConstraint();
        #    AifConstraintList   aifConstraintList   = new AifConstraintList();
        #    ;
        #
        #    actionId = AifSendService::getDefaultSendAction(classnum(ReturnReturnOrderOutService),AifSendActionType::SendByKey);
        #
        #    if(actionId)
        #    {
        #        aifConstraint.parmType(AifConstraintType::Customer) ;
        #        aifConstraint.parmId(this.CustAccount) ;
        #        aifConstraintList.addConstraint(aifConstraint) ;
        #
        #        endpointList = AifSendService::getEligibleEndpoints(actionId, aifConstraintList);
        #        if(endpointList.getEndpointCount()>0)
        #        {
        #            ret = true;
        #        }
        #    }
        #
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #CheckAccount
        #boolean  checkAccount()
        #{
        #    CustVendorBlocked   blockLevel = CustTable::blocked(this.CustAccount);
        #    ;
        #
        #    switch (blockLevel)
        #    {
        #        case CustVendorBlocked::All:
        #            return checkFailed(strfmt("@SYS18389", this.CustAccount, enum2str(blockLevel)));
        #        case CustVendorBlocked::Invoice:
        #            warning(strfmt("@SYS18389", this.CustAccount, enum2str(blockLevel)));
        #        break;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkAgainstCreditLimit
        #boolean checkAgainstCreditLimit(Common _salesLineOrTable = this, SalesTotals _salesTotals = null)
        #{
        #    boolean         ret = true;
        #    CustCreditLimit custCreditLimit;
        #
        #    if (this.isCreditCheckEligible())
        #    {
        #        setprefix(strfmt("@SYS76767", this.SalesId));
        #
        #        custCreditLimit = CustCreditLimit::construct(_salesLineOrTable, _salesTotals);
        #
        #        ret = custCreditLimit.check();
        #
        #        // when checking for credit limit excess during order entry, the user is always able to continue
        #        // regardless of whether Warning or Error is chosen.
        #        ret = true;
        #
        #        this.Touched = NoYes::No;
        #    }
        #
        #    return ret;
        #
        #}
        #
      ENDSOURCE
      SOURCE #checkAndUpdateAvailableDlvDates
        #server boolean checkAndUpdateAvailableDlvDates()
        #{
        #    boolean ret;
        #    ;
        #    ret = SalesCalcAvailableDlvDates::validateWritePrompt(this, false, true);
        #    this.doUpdate();
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #CheckCashPayment
        #boolean checkCashPayment()
        #{
        #    if (PaymTerm::isCashAccount(this.Payment) && this.PaymentSched )
        #    {
        #        return checkFailed(strfmt("@SYS25074"));
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkContactPerson
        #boolean checkContactPerson()
        #{
        #    ContactPerson   contactPerson;
        #    ;
        #    if (this.ContactPersonId)
        #    {
        #        contactPerson = ContactPerson::find(this.ContactPersonId);
        #        if (contactPerson.CustAccount != this.CustAccount)
        #        {
        #            // Contact person "%1 - %2" must be attached to the customer "%3".
        #            return checkFailed(strfmt("@SYS92800",this.ContactPersonId,contactPerson.Name,this.CustAccount));
        #        }
        #    }
        #    return true;
        #}
        #
      ENDSOURCE
      SOURCE #CheckCreditCard
        #public boolean checkCreditCard()
        #{
        #    CreditCardPaymentType     paymType = this.payment().CreditCardPaymentType;
        #    ;
        #
        #    if (!CustParameters::useCreditCardModule())
        #    {
        #        return true;
        #    }
        #
        #    if (paymType == CreditCardPaymentType::CreditCard && !this.CreditCardCustRefId )
        #    {
        #        //"The credit card number must be specfied."
        #        return checkFailed("@SYS116746");
        #    }
        #
        #    if (paymType != CreditCardPaymentType::CreditCard && this.CreditCardCustRefId )
        #    {
        #        //'The payment type must be credit card, since the credit card number has been specified."
        #        return checkFailed("@SYS116747");
        #    }
        #
        #    if (paymType == CreditCardPaymentType::CreditCard  &&
        #            this.CreditCardCustRefId                 &&
        #            !CreditCard::checkExpireDate(CreditCardCust::find(this.CreditCardCustRefId).ExpiryDate))
        #    {
        #        //'Credit card is expired.'
        #        return checkFailed("@SYS116750");
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkCreditCardPaymentType
        #public boolean checkCreditCardPaymentType()
        #{
        #    ;
        #
        #    if (!this.type().canHaveCreditCard() &&
        #        this.payment().CreditCardPaymentType == CreditCardPaymentType::CreditCard)
        #    {
        #        return checkFailed(strfmt("@SYS127403", this.SalesType));
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkCreditLimit
        #void checkCreditLimit(SalesTotals _salesTotals = null)
        #{
        #    ;
        #    SalesTableType::checkAgainstCreditLimit(this, _salesTotals);
        #}
        #
      ENDSOURCE
      SOURCE #CheckCurrencyCode
        #client server
        #void  checkCurrencyCode()
        #{
        #    if (this)
        #    {
        #        if (this.CurrencyCode != this.orig().CurrencyCode &&
        #            SalesLine::existDifferentCurrency(this.SalesId,this.CurrencyCode))
        #        {
        #            warning("@SYS15290");
        #
        #            this.CurrencyCode = this.orig().CurrencyCode;
        #        }
        #
        #        if (this.CurrencyCode != this.orig().CurrencyCode &&
        #            MarkupTrans::existDifferentCurrency(this.TableId, this.RecId, this.CurrencyCode))
        #        {
        #            warning("@SYS24528");
        #
        #            this.CurrencyCode = this.orig().CurrencyCode;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #checkDelete
        #boolean checkDelete(boolean _useWarning = true)
        #{
        #    return this.type().checkDelete(_useWarning);
        #}
      ENDSOURCE
      SOURCE #checkDelivery
        #boolean checkDelivery()
        #{
        #    ;
        #
        #    if (!this.DlvMode)
        #    {
        #        // "Mode of delivery must be specified."
        #        return checkFailed(strfmt("@SYS116733"));
        #    }
        #
        #    if (!this.DlvTerm)
        #    {
        #        // "Delivery term must be specified."
        #        return checkFailed(strfmt("@SYS116734"));
        #    }
        #
        #    if (!this.ShipCarrierId)
        #    {
        #        // "Carrier must be specified."
        #        return checkFailed("@SYS116735");
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkIfUpdate
        #server container checkIfUpdate()
        #{
        #    container   checkIfUpdate;
        #;
        #    if (this.DataAreaId != curext())
        #    {
        #        changecompany(this.DataAreaId)
        #        {
        #            checkIfUpdate = this.type().checkIfUpdate();
        #        }
        #    }
        #    else
        #    {
        #        checkIfUpdate = this.type().checkIfUpdate();
        #    }
        #    return checkIfUpdate;
        #}
      ENDSOURCE
      SOURCE #checkInvoiceAccount
        #boolean checkInvoiceAccount()
        #{
        #    CustVendorBlocked   blockLevel = CustTable::blocked(this.InvoiceAccount);
        #    ;
        #    switch (blockLevel)
        #    {
        #        case CustVendorBlocked::All:
        #            return checkFailed(strfmt("@SYS79283", this.InvoiceAccount, enum2str(blockLevel)));
        #        case CustVendorBlocked::Invoice:
        #            warning(strfmt(strfmt("@SYS79283", this.InvoiceAccount, enum2str(blockLevel))));
        #        break;
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #CheckPayment
        #boolean checkPayment()
        #{
        #    PaymTerm        paymTerm;
        #    ;
        #
        #    paymTerm = this.payment();
        #    if (paymTerm.PaymMethod == NetCurrent::COD && !this.returnJournal())
        #    {
        #        if (!this.DlvMode)
        #        {
        #            return checkFailed(strfmt("@SYS24563"));
        #        }
        #
        #        if (this.PaymentSched)
        #        {
        #            return checkFailed(strfmt("@SYS24623"));
        #        }
        #    }
        #
        #    if (this.PaymentSched && this.FixedDueDate)
        #    {
        #        return checkFailed("@SYS69828");
        #    }
        #
        #    if (paymTerm.CreditCardPaymentType == CreditCardPaymentType::CreditCard)
        #    {
        #        if (!CreditCardProcessors::validateCurrencyForUSDProviders(this.CurrencyCode) || !this.checkPaymMode())
        #        {
        #            // The active credit card processor only supports USD as a currency.
        #            return checkFailed("@SYS124613");
        #        }
        #
        #        if (this.PaymentSched)
        #        {
        #            return checkFailed("@SYS27358");
        #        }
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkPaymMode
        #/// <summary>
        #/// Checks whether the payment mode is valid.
        #/// </summary>
        #/// <returns>
        #/// true if the payment mode is valid; otherwise, false.
        #/// </returns>
        #public boolean checkPaymMode()
        #{
        #    boolean             ok = true;
        #    CustPaymModeTable   custPaymModeTable;
        #    CustParameters      custParameters;
        #    ;
        #
        #    if (this.payment().CreditCardPaymentType == CreditCardPaymentType::CreditCard)
        #    {
        #        custPaymModeTable = CustPaymModeTable::find(this.PaymMode);
        #
        #        if (custPaymModeTable.offsetAccount() != ''
        #            && !CreditCardProcessors::validateAccountForUSDProviders(custPaymModeTable.paymACType(), custPaymModeTable.offsetAccount()))
        #        {
        #            ok = false;
        #        }
        #        else if (custPaymModeTable.offsetAccount() == '')
        #        {
        #            custParameters = CustParameters::find();
        #
        #            if (!CreditCardProcessors::validateAccountForUSDProviders(custParameters.CreditCardPostingAccountType, custParameters.CreditCardPostingAccount))
        #            {
        #                ok = false;
        #            }
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkReservation
        #boolean checkReservation()
        #{
        #    SalesLine   salesLine;
        #    boolean     ok = true;
        #    ;
        #    select firstonly salesLine
        #           index hint SalesLineIdx
        #           where salesLine.SalesId          == this.SalesId
        #           &&    salesLine.InventRefTransId != '';
        #    if (salesLine
        #    &&  this.Reservation == ItemReservation::Explosion)
        #        ok = checkFailed("@SYS105404");
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #CheckUpdate
        #boolean  checkUpdate(boolean  useWarning        = true,
        #                     boolean _interCompanyCheck = true)
        #{
        #    return this.type().checkUpdate(useWarning,_interCompanyCheck);
        #}
        #
      ENDSOURCE
      SOURCE #clearAddressReference
        #public void clearAddressReference()
        #{
        #    this.AddressRefRecId    = 0;
        #    this.AddressRefTableId  = 0;
        #}
      ENDSOURCE
      SOURCE #ClearingPeriod
        #ClearingPeriod clearingPeriod()
        #{
        #    return this.custTable_InvoiceAccount().clearingPeriod();
        #}
        #
      ENDSOURCE
      SOURCE #contactPerson
        #ContactPerson contactPerson(boolean _forUpdate = false)
        #{
        #    return ContactPerson::find(this.ContactPersonId, _forUpdate);
        #}
      ENDSOURCE
      SOURCE #ContactPersonName
        #//BP Deviation documented
        #display ContactPersonName contactPersonName()
        #{
        #    return ContactPerson::name(this.ContactPersonId);
        #}
      ENDSOURCE
      SOURCE #contributionMargin
        #//BP Deviation documented
        #server display ContributionMarginMST contributionMargin()
        #{
        #    SalesTotals             salesTotals;
        #    ContributionMarginMST   contributionMargin;
        #    ;
        #
        #    salesTotals = SalesTotals::construct(this, SalesUpdate::All);
        #    salesTotals.prepareBalanceCalculation();
        #    salesTotals.prepareCostValueCalculation();
        #    salesTotals.calc();
        #
        #    contributionMargin   = Currency::mstAmount(salesTotals.totalBalance() - salesTotals.totalEndDisc(), this.CurrencyCode);
        #    contributionMargin  -= salesTotals.totalCostValue();
        #
        #    return contributionMargin;
        #}
      ENDSOURCE
      SOURCE #convertCurrencyCode
        #server void convertCurrencyCode(CurrencyCode currencyCode, TradeCurencyConversion tradeCurencyConversion = TradeCurencyConversion::ExchRate)
        #{
        #    SalesLine       salesLine;
        #    MarkupTrans     markupTrans;
        #
        #    ttsbegin;
        #
        #    while select forupdate salesLine
        #          where salesLine.SalesId   == this.SalesId
        #    {
        #        salesLine.convertCurrencyCode(currencyCode, tradeCurencyConversion);
        #        salesLine.doUpdate();
        #    }
        #
        #    while select forupdate markupTrans
        #          index hint TableRecIdIdx
        #          where markupTrans.TransTableId  == this.TableId &&
        #                markupTrans.TransRecId    == this.RecId
        #    {
        #        markupTrans.convertCurrencyCode(currencyCode);
        #        markupTrans.doUpdate();
        #    }
        #
        #    CustPaymSched::deleteCustPaymSched(this.TableId, this.RecId);
        #
        #    if (this.FixedExchRate)
        #        info(strfmt("@SYS78763", this.SalesId));
        #
        #    this.FixedExchRate  = 0;
        #
        #    this.CurrencyCode = currencyCode;
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #copyAddressToLine
        #server void  copyAddressToLine(DialogButton    copyAddress,
        #                               SalesTable      salesTable)
        #{
        #    SalesLine  salesLine;
        #    ;
        #
        #    if (copyAddress == DialogButton::Cancel)
        #        return;
        #
        #    ttsbegin;
        #
        #    while select forupdate salesLine
        #        where salesLine.SalesId == this.SalesId &&
        #            (copyAddress                 == DialogButton::YesToAll ||
        #             salesLine.DeliveryAddress   == salesTable.orig().DeliveryAddress)
        #    {
        #        salesLine.setAddressFromSalesTable(this);
        #        salesLine.DeliveryDateControlType = SalesDeliveryDateControlType::None;
        #        salesLine.write();
        #    }
        #
        #    ttscommit;
        #}
        #
      ENDSOURCE
      SOURCE #copyDimension
        #/// <summary>
        #/// Returns a dimension set that can be applied to the SalesTable.dimension field.
        #/// The method ensures that potential linked dimensions are not overwritten.
        #/// </summary>
        #/// <param name="_dimension">
        #/// A dimension set that should be applied to the SalesTable.dimension field.
        #/// </param>
        #/// <param name="_dimensionCopy">
        #/// A dimensionCopy object previously instantiated using the current SalesTable buffer; optional.
        #/// </param>
        #/// <returns>
        #/// Dimension set that can be applied to the SalesTable.dimension field.
        #/// </returns>
        #public Dimension copyDimension(Dimension _dimension, DimensionCopy _dimensionCopy = DimensionCopy::newFromTable(this))
        #{
        #    return _dimensionCopy.copy(_dimension);
        #}
        #
      ENDSOURCE
      SOURCE #CopyPaymentSched
        #server void copyPaymentSched(CustInvoiceJour custInvoiceJour)
        #{
        #    CustPaymSched       custPaymSched;
        #    CustVendPaymSched   custVendPaymSched;
        #    ;
        #
        #    ttsbegin;
        #
        #    select custPaymSched
        #    where custPaymSched.ExtTableId       == this.TableId &&
        #          custPaymSched.ExtRecId         == this.RecId;
        #
        #    if (custPaymSched.RecId)
        #    {
        #        custVendPaymSched = CustVendPaymSched::construct(SysModule::Cust, custInvoiceJour);
        #        custVendPaymSched.copyCustVendPaymSched(custPaymSched);
        #    }
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #copyRMALines
        #void copyRMALines(SalesTable _returnTable, NoYes _copyRMALines = NoYes::No)
        #{
        #    SalesLine   salesLine;
        #    SalesLine   replacementLine;
        #    SalesTable  returnTable = SalesTable::findRecId(_returnTable.RecId, true);
        #    ;
        #
        #    ttsbegin;
        #
        #    if (_copyRMALines == NoYes::Yes && returnTable.returnJournal())
        #    {
        #        while select salesLine where salesLine.SalesId == returnTable.SalesId && salesLine.ReturnStatus != ReturnStatusLine::Canceled
        #        {
        #            replacementLine.clear();
        #
        #            replacementLine.SalesType = SalesType::Sales;
        #
        #            // copy from return line
        #            replacementLine.initFromSalesLine(salesLine);
        #            // update with replacement sales order information
        #            replacementLine.initFromSalesTable(this);
        #
        #            replacementLine.SalesQty    = -salesLine.ExpectedRetQty;
        #            replacementLine.SalesPrice  = Currency::curPrice2CurPrice(replacementLine.SalesPrice, salesLine.CurrencyCode, replacementLine.CurrencyCode);
        #            replacementLine.LineAmount  = Currency::curAmount2CurAmount(replacementLine.LineAmount, salesLine.CurrencyCode, replacementLine.CurrencyCode);
        #
        #            SalesCalcAvailableDlvDates::initDateFields(replacementLine);
        #
        #            replacementLine.LineAmount  = replacementLine.calcLineAmount();
        #
        #            replacementLine.createLine(true,false, true, true, false, false, this.Reservation == ItemReservation::Automatic, true);
        #        }
        #    }
        #
        #    returnTable.ReturnReplacementId = this.SalesId;
        #    returnTable.update();
        #
        #    ttscommit;
        #}
        #
        #
        #
        #
      ENDSOURCE
      SOURCE #copyThirdPartyAddressFromCust
        #/// <summary>
        #/// Copies address to the SalesTable buffer.
        #/// </summary>
        #/// <remarks>
        #/// When customer has third party info, user is prompted if need copy to sales order.
        #/// </remarks>
        #void copyThirdPartyAddressFromCust()
        #{
        #    CustTable       fromCustTable;
        #    Address         fromTPAddress;
        #    Address         toTPAddress;
        #    SalesLine       toSalesLine;
        #    Addressing      oldThirdPartyBillingAddr;
        #    ;
        #
        #    fromCustTable = this.custTable_CustAccount();
        #    fromTPAddress = Address::find(fromCustTable.TableId, fromCustTable.RecId, AddressType::ShipCarrierThirdPartyShipping);
        #    toTPAddress   = Address::find(this.TableId, this.RecId, AddressType::ShipCarrierThirdPartyShipping, true);
        #
        #    oldThirdPartyBillingAddr = toTPAddress.Address;
        #
        #    if (toTPAddress)
        #    {
        #        ttsbegin;
        #        toTPAddress.delete();
        #
        #        // Delete the third party addresses referenced by the sales lines
        #        delete_from toTPAddress
        #            exists join toSalesLine
        #            where toSalesLine.SalesId == this.SalesId
        #            && toTPAddress.AddrTableId == toSalesLine.TableId
        #            && toTPAddress.AddrRecId == toSalesLine.RecId
        #            && toTPAddress.Type == AddressType::ShipCarrierThirdPartyShipping;
        #
        #        // Update the sales lines delivery information
        #        toSalesLine.skipDataMethods(true);
        #        update_recordset toSalesLine setting
        #            DeliveryName = fromCustTable.Name,
        #            ShipCarrierAccount = fromCustTable.ShipCarrierAccount,
        #            ShipCarrierAccountCode = fromCustTable.ShipCarrierAccountCode,
        #            ShipCarrierId = fromCustTable.ShipCarrierId,
        #            DlvMode = fromCustTable.DlvMode
        #            where toSalesLine.SalesId == this.SalesId
        #            notexists join toTPAddress
        #                where toTPAddress.AddrTableId == toSalesLine.TableId
        #                && toTPAddress.AddrRecId == toSalesLine.RecId
        #                && toTPAddress.Type == AddressType::ShipCarrierThirdPartyShipping;
        #
        #        ttscommit;
        #    }
        #
        #    if (!fromTPAddress)
        #    {
        #        return;
        #    }
        #
        #    if (SalesParameters::find().PromptTransfer)
        #    {
        #        if (DialogButton::Yes == Box::yesNo("@SYS116932", DialogButton::Yes))
        #        {
        #            Address::copyThirdPartyAddress(fromTPAddress, this.TableId, this.RecId);
        #            ttsbegin;
        #            this.ShipCarrierAccount = fromTPAddress.ShipCarrierAccount;
        #            this.ShipCarrierAccountCode = fromTPAddress.ShipCarrierAccountCode;
        #            this.ShipCarrierId = fromTPAddress.ShipCarrierId;
        #            if (fromTPAddress.DlvTerm == '')
        #            {
        #                this.DlvTerm = fromCustTable.DlvTerm;
        #            }
        #            else
        #            {
        #                this.DlvTerm = fromTPAddress.DlvTerm;
        #            }
        #
        #            if (fromTPAddress.DlvMode == '')
        #            {
        #                this.DlvMode = fromCustTable.DlvMode;
        #            }
        #            else
        #            {
        #                this.DlvMode = fromTPAddress.DlvMode;
        #            }
        #            this.ShipCarrierBlindShipment = fromTPAddress.ShipCarrierBlindShipment;
        #            this.ShipCarrierFuelSurcharge = fromCustTable.ShipCarrierFuelSurcharge;
        #            this.ShipCarrierResidential = fromTPAddress.ShipCarrierResidential;
        #
        #            if (this.RecId)
        #            {
        #                this.update();
        #            }
        #            ttscommit;
        #
        #            if (this.tpAddress() != oldThirdPartyBillingAddr && SalesLine::exist(this.SalesId))
        #            {
        #                if (SalesTable::promptCopyThirdPartyBillingAddress() == DialogButton::Yes)
        #                {
        #                    this.copyThirdPartyBillingAddressToLine();
        #                }
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #copyThirdPartyBillingAddressToLine
        #server void  copyThirdPartyBillingAddressToLine()
        #{
        #    CustTable   fromCustTable;
        #    SalesLine   salesLine;
        #    Address     fromTPAddress;
        #    ;
        #
        #    fromCustTable = this.custTable_CustAccount();
        #    fromTPAddress = Address::find(this.TableId, this.RecId, AddressType::ShipCarrierThirdPartyShipping);
        #    ttsbegin;
        #
        #    while select forupdate salesLine
        #        where salesLine.SalesId == this.SalesId
        #    {
        #        Address::copyThirdPartyAddress(fromTPAddress, salesLine.TableId, salesLine.RecId);
        #        salesLine.DeliveryName = fromCustTable.Name;
        #        salesLine.ShipCarrierAccount = fromTPAddress.ShipCarrierAccount;
        #        salesLine.ShipCarrierAccountCode = fromTPAddress.ShipCarrierAccountCode;
        #        salesLine.ShipCarrierId = fromTPAddress.ShipCarrierId;
        #        if (fromTPAddress.DlvMode == '')
        #        {
        #            salesLine.DlvMode = fromCustTable.DlvMode;
        #        }
        #        else
        #        {
        #            salesLine.DlvMode = fromTPAddress.DlvMode;
        #        }
        #        salesLine.update();
        #    }
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #createCarrierInfoAndThirdPartyAddress
        #/// <summary>
        #/// Initializes third party shipping address and carrier info.
        #/// </summary>
        #void createCarrierInfoAndThirdPartyAddress()
        #{
        #    Address         tpAddr;
        #    CustTable       custTable;
        #    DlvMode         dlvMode;
        #    ;
        #
        #    if (isConfigurationkeyEnabled(configurationkeynum(ShipCarrier)) &&
        #        !Address::find(this.TableId, this.RecId, AddressType::ShipCarrierThirdPartyShipping) )
        #    {
        #        custTable = CustTable::find(this.CustAccount);
        #        tpAddr = Address::find(custTable.TableId, custTable.RecId, AddressType::ShipCarrierThirdPartyShipping);
        #
        #        //if the delivery mode has not been changed in create form,
        #        //and the customer has those info, copy from custTable
        #        if (this.DlvMode == custTable.DlvMode && tpAddr)
        #        {
        #            tpAddr.AddrTableId = this.TableId;
        #            tpAddr.AddrRecId = this.RecId;
        #            tpAddr.insert();
        #        }
        #        //otherwise, copy carrierID from dlvMode
        #        else
        #        {
        #            dlvMode = DlvMode::find(this.DlvMode);
        #            if (dlvMode && dlvMode.ShipCarrierId)
        #            {
        #                tpAddr.AddrTableId = this.TableId;
        #                tpAddr.AddrRecId = this.RecId;
        #                tpAddr.ShipCarrierId = dlvMode.ShipCarrierId;
        #                tpAddr.insert();
        #            }
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #createMarkupTrans
        #server void  createMarkupTrans()
        #{;
        #    if (this.markupAllowed())
        #    {
        #        Markup::insertMarkupTrans(HeadingLine::Heading,
        #                                  ModuleInventCustVend::Cust,
        #                                  this,
        #                                  this.CustAccount,
        #                                  this.MarkupGroup,
        #                                  this.CurrencyCode,
        #                                  this.LanguageId,
        #                                  '',
        #                                  this.MarkupGroup);
        #    }
        #}
      ENDSOURCE
      SOURCE #CreateOneTimeAccount
        #client server void createOneTimeAccount()
        #{
        #    this.CustAccount = CustTable::createOneTimeAccount(this);
        #    this.initFromCustTable();
        #
        #    if (!this.InvoiceAccount)
        #        this.InvoiceAccount = this.CustAccount;
        #}
      ENDSOURCE
      SOURCE #CreatePaymentSched
        #server void createPaymentSched()
        #{
        #    CustVendPaymSched   custVendPaymSched;
        #    SalesTotals         salesTotals = SalesTotals::construct(this, SalesUpdate::All);
        #    ;
        #
        #    salesTotals.prepareTotalAmountCalculation();
        #    salesTotals.calc();
        #
        #    custVendPaymSched = CustVendPaymSched::construct(SysModule::Cust,this);
        #    custVendPaymSched.setSalesTotals(salesTotals);
        #    custVendPaymSched.createPaymSched(PaymSched::find(this.PaymentSched));
        #}
      ENDSOURCE
      SOURCE #createReplacementOrderAllowed
        #public boolean createReplacementOrderAllowed()
        #{
        #    boolean ret = false;
        #    ;
        #    if (this.isInterCompanyOrder()
        #    &&  this.InterCompanyDirectDeliveryOrig)
        #    {
        #        ret = false;
        #    }
        #    else if (this.ReturnStatus == ReturnStatusHeader::Created
        #         && !this.ReturnReplacementId
        #         &&  this.existSalesLine()
        #         && !this.interCompanyReplacementRegistered())
        #    {
        #        ret = true;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #createReturnMarkupTrans
        #server void createReturnMarkupTrans()
        #{;
        #    if (this.markupAllowed())
        #    {
        #       Markup::insertReturnMarkupTrans(HeadingLine::Heading,
        #                                       ModuleInventCustVend::Cust,
        #                                       this,
        #                                       this.CustAccount,
        #                                       this.MarkupGroup,
        #                                       this.LanguageId);
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #creditCardAuthorizationCode
        #/// <summary>
        #/// Returns the authorization code that came from the credit card processor.
        #/// </summary>
        #/// <returns>
        #/// The authorization code returned by the credit card processor.
        #/// </returns>
        #
        #//BP Deviation Documented
        #public display CreditCardAuthorization creditCardAuthorizationCode()
        #{
        #    ;
        #
        #    return CreditCardAuthTrans::findValidPreApproval(this.SalesId).Authorization;
        #}
        #
      ENDSOURCE
      SOURCE #creditCardBypassCreditLimit
        #boolean creditCardBypassCreditLimit()
        #{
        #    boolean ret;
        #    ;
        #    ret =  this.payment().CreditCardCreditCheck == CreditCardCreditCheck::ByPass;
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #creditCardPreauthorizationAmount
        #/// <summary>
        #/// Returns the preauthorization amount charged to the credit card.
        #/// </summary>
        #/// <returns>
        #/// The preauthorization amount for the credit card.
        #/// </returns>
        #
        #//BP Deviation Documented
        #public display CreditCardPreauthorizationAmount creditCardPreauthorizationAmount()
        #{
        #    ;
        #
        #    return CreditCardAuthTrans::findValidPreApproval(this.SalesId).ApprovalAmountCur;
        #}
      ENDSOURCE
      SOURCE #customerEmail
        #//BP Deviation documented
        #display Email customerEmail()
        #{
        #    return this.custTable_CustAccount().Email;
        #}
        #
      ENDSOURCE
      SOURCE #CustomerName
        #//BP Deviation documented
        #display CustName customerName()
        #{
        #    return this.custTable_CustAccount().Name;
        #}
        #
      ENDSOURCE
      SOURCE #customerPhone
        #//BP Deviation documented
        #display Phone customerPhone()
        #{
        #    return this.custTable_CustAccount().Phone;
        #}
        #
      ENDSOURCE
      SOURCE #custTable_CustAccount
        #CustTable custTable_CustAccount(boolean _forUpdate = false)
        #{
        #    return CustTable::find(this.CustAccount, _forUpdate);
        #}
      ENDSOURCE
      SOURCE #custTable_InvoiceAccount
        #CustTable  custTable_InvoiceAccount(boolean  _forUpdate = false)
        #{
        #    return CustTable::find(this.InvoiceAccount, _forUpdate);
        #}
      ENDSOURCE
      SOURCE #delete
        #public void  delete()
        #{
        #    SalesTableType salesTableType;
        #    ;
        #
        #    salesTableType = this.type();
        #    salesTableType.delete();
        #
        #    TradeBLWIJournalPurposeCodes::deleteRecord(this.RecId, TradeBLWITypeOfForm::SalesTable);
        #
        #    // Update the CRM transaction log
        #    smmTransLog::initTrans(this, smmLogAction::delete);
        #}
      ENDSOURCE
      SOURCE #deliveryAddress
        #public Address deliveryAddress()
        #{
        #    Address     address;
        #    ;
        #    address.CountryRegionId = this.DeliveryCountryRegionId;
        #    address.County          = this.DeliveryCounty;
        #    address.Email           = this.Email;
        #    address.Name            = this.DeliveryName;
        #    address.State           = this.DeliveryState;
        #    address.url             = this.url;
        #    address.ZipCode         = this.DeliveryZipCode;
        #    address.Street          = this.DeliveryStreet;
        #    address.City            = this.DeliveryCity;
        #    address.Address         = this.DeliveryAddress;
        #
        #    return address;
        #}
        #
      ENDSOURCE
      SOURCE #deliveryDate
        #//BP Deviation documented
        #display DlvDate deliveryDate(DlvDate _blankDate = dateNull())
        #
        #{
        #    if (this.ShippingDateConfirmed || this.ShippingDateRequested)
        #        return this.ShippingDateConfirmed ? this.ShippingDateConfirmed : this.ShippingDateRequested;
        #
        #    if (prmisdefault(_blankDate))
        #    {
        #        return InventOrderEntryDeadlineTable::effectiveOrderDate(this.InventSiteId,CustTable::find(this.CustAccount).OrderEntryDeadlineGroupId);
        #    }
        #    return _blankDate;
        #}
      ENDSOURCE
      SOURCE #dlvModeMandatory
        #boolean dlvModeMandatory()
        #{;
        #    if (this.SalesType == SalesType::ReturnItem)
        #{
        #        return false;
        #    }
        #
        #    if (this.payment().PaymMethod   == NetCurrent::COD)
        #    {
        #        return true;
        #    }
        #
        #    return false;
        #}
        #
      ENDSOURCE
      SOURCE #editContactPersonName
        #//BP Deviation documented
        #client server
        #edit ContactPersonName  editContactPersonName(boolean _set, ContactPersonName _name)
        #{
        #    ContactPersonName   name = _name;
        #    ContactPerson       contactPerson;
        #    ContactPersonId     contactPersonId;
        #
        #    if (_set)
        #    {
        #        if (name)
        #        {
        #            contactPersonId = this.ContactPersonId;
        #            contactPerson = ContactPerson::find(_name);
        #            this.ContactPersonId = contactPerson.ContactPersonId;
        #            if (this.ContactPersonId)
        #            {
        #                name = contactPerson.Name;
        #            }
        #            else
        #            {
        #                select contactPerson
        #                    where contactPerson.CustAccount ==   this.CustAccount &&
        #                          contactPerson.Name        like name;
        #                if (contactPerson)
        #                {
        #                    this.ContactPersonId=contactPerson.ContactPersonId;
        #                    name=contactPerson.Name;
        #                }
        #            }
        #            if (contactPersonId != this.ContactPersonId)
        #            {
        #                if (this.checkContactPerson())
        #                {
        #                    this.initFromContactInfo();
        #                    if (this.dataSource())
        #                        this.dataSource().refresh();
        #                }
        #                else
        #                {
        #                    this.ContactPersonId = contactPersonId;
        #                }
        #
        #            }
        #        }
        #        else
        #        {
        #            this.ContactPersonId='';
        #        }
        #    }
        #    else
        #    {
        #        name = this.contactPersonName();
        #    }
        #
        #    return name;
        #}
        #
        #
      ENDSOURCE
      SOURCE #editCreditCard
        #//BP deviation documented
        #client server edit CreditCardNumber editCreditCard(boolean _set, TempStr _refCCId)
        #{
        #    RecId               recId = str2int64(_refCCId);
        #    CreditCardNumber    creditCardNumber;
        #    ;
        #
        #    if (_set)
        #    {
        #        if (this.validateField(fieldnum(SalesTable, CreditCardCustRefId)))
        #        {
        #            if (recId)
        #            {
        #                this.CreditCardCustRefId = CreditCardCust::find(recId).RecId;
        #                if (this.CreditCardCustRefId)
        #                {
        #                   creditCardNumber = CreditCard::creditCardNumber(this.CreditCardCustRefId);
        #                }
        #            }
        #            else
        #            {
        #               this.CreditCardCustRefId = 0;
        #            }
        #
        #            return creditCardNumber;
        #        }
        #    }
        #
        #    if (this.CreditCardCustRefId)
        #    {
        #        // Double check to make sure the record hasn't been deleted
        #        this.CreditCardCustRefId = CreditCardCust::find(this.CreditCardCustRefId).RecId;
        #        if (this.CreditCardCustRefId)
        #        {
        #            creditCardNumber = CreditCard::creditCardNumber(this.CreditCardCustRefId);
        #        }
        #        else
        #        {
        #            this.CreditCardCustRefId = 0;
        #        }
        #    }
        #    else
        #    {
        #        this.CreditCardCustRefId = 0;
        #    }
        #
        #    return creditCardNumber;
        #}
        #
      ENDSOURCE
      SOURCE #editFixedExchRate
        #//BP Deviation documented
        #public edit SalesFixedExchRate editFixedExchRate(boolean set, SalesFixedExchRate _exchRate)
        #{
        #    if (set)
        #    {
        #        this.FixedExchRate = ExchRates::setExchRate(_exchRate);
        #    }
        #    else
        #    {
        #        _exchRate = ExchRates::displayExchRate(this.FixedExchRate);
        #    }
        #
        #    return _exchRate;
        #}
      ENDSOURCE
      SOURCE #euroTriangulation
        #EUROTriangulation euroTriangulation(date _date = systemdateget())
        #{
        #    if (this.SettleVoucher == SettlementType::SelectedTransact && SalesParameters::find().UseSettleExchRate)
        #    {
        #        if (this.settleExchRate())
        #        {
        #            return NoYes::No;
        #        }
        #    }
        #
        #    if (this.FixedExchRate)
        #    {
        #        return NoYes::No;
        #    }
        #
        #    return Currency::triangulation(this.CurrencyCode, _date);
        #}
      ENDSOURCE
      SOURCE #exchRate
        #CustExchRate exchRate(date _date = systemdateget(), boolean throwOnError = false)
        #{
        #    CustExchRate    exchRate = 0;
        #    ;
        #    if (this.SettleVoucher == SettlementType::SelectedTransact && SalesParameters::find().UseSettleExchRate)
        #    {
        #        exchRate = this.settleExchRate(throwOnError);
        #    }
        #
        #    if (!exchRate)
        #    {
        #        if (this.FixedExchRate)
        #        {
        #            exchRate = this.FixedExchRate;
        #        }
        #        else
        #        {
        #            exchRate = Currency::exchRate(this.CurrencyCode, _date);
        #        }
        #    }
        #
        #    return exchRate;
        #}
      ENDSOURCE
      SOURCE #exchRateSecondary
        #ExchrateSecondary exchRateSecondary(date _date = systemdateget())
        #{
        #    ExchRate exchRateSecondary;
        #    ;
        #
        #    if (this.SettleVoucher == SettlementType::SelectedTransact &&
        #        SalesParameters::find().UseSettleExchRate &&
        #        (SpecTrans::getSpecTransCount(this.company(), this.TableId, this.RecId) > 0))
        #    {
        #        exchRateSecondary = 0;
        #    }
        #    else if (this.FixedExchRate)
        #    {
        #        exchRateSecondary = 0;
        #    }
        #    else
        #    {
        #        exchRateSecondary = Currency::exchRateSecond(this.CurrencyCode, _date);
        #    }
        #
        #    return exchRateSecondary;
        #}
      ENDSOURCE
      SOURCE #existDirectDelivery
        #boolean existDirectDelivery()
        #{
        #    SalesLine   salesLine;
        #    ;
        #
        #    select firstonly salesLine where
        #        salesLine.SalesId           == this.SalesId &&
        #        salesLine.InventRefId       != ''           &&
        #        salesLine.DeliveryType      == TradeLineDlvType::DropShip;
        #
        #    return salesLine.RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existingJournals
        #server container existingJournals()
        #{
        #    return[this.lastQuotation(),
        #           this.lastConfirm(),
        #           this.lastPickingList(),
        #           this.lastPackingSlip(),
        #           this.lastInvoice()];
        #}
      ENDSOURCE
      SOURCE #existInterCompanyPurch
        #boolean existInterCompanyPurch()
        #{
        #    InterCompanyPurchSalesReference interCompanyPurchSalesReference;
        #;
        #    select firstonly RecId from interCompanyPurchSalesReference
        #           index hint SalesPurchIdx
        #           where interCompanyPurchSalesReference.SalesId == this.SalesId;
        #
        #    return interCompanyPurchSalesReference.RecId ? true : false;
        #}
      ENDSOURCE
      SOURCE #existInterCompanySales
        #boolean existInterCompanySales(boolean _checkOnlyOne = false)
        #{
        #    InterCompanyPurchSalesReference interCompanyPurchSalesReference;
        #    PurchTable                      purchTable;
        #;
        #    select forceplaceholders firstonly RecId from interCompanyPurchSalesReference
        #           index hint SalesPurchIdx
        #           where interCompanyPurchSalesReference.SalesId == this.SalesId
        #    join RecId from purchTable
        #           index hint PurchIdx
        #           where purchTable.PurchId == interCompanyPurchSalesReference.PurchId
        #           &&    purchTable.InterCompanyOrder
        #           &&   (!_checkOnlyOne
        #             || ( _checkOnlyOne && purchTable.InterCompanyOriginalSalesId == this.SalesId));
        #
        #    return purchTable.RecId ? true : false;
        #}
      ENDSOURCE
      SOURCE #existMarkedSettlement
        #boolean existMarkedSettlement(fieldId _fieldId)
        #{
        #    if (this.SettleVoucher && SpecTrans::getSpecTransCount(this.DataAreaId, this.TableId, this.RecId))
        #    {
        #        switch(_fieldId)
        #        {
        #            case fieldnum(SalesTable, CustAccount):     error("@SYS99928");
        #                                                        break;
        #
        #            case fieldnum(SalesTable, InvoiceAccount):  error("@SYS100001");
        #                                                        break;
        #
        #            default:                                    return false;
        #        }
        #        return true;
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existNonCanceledLines
        #public boolean existNonCanceledLines()
        #{
        #    SalesLine   salesLine;
        #    ;
        #
        #    select firstonly salesLine where salesLine.SalesId == this.SalesId && salesLine.ReturnStatus != ReturnStatusLine::Canceled;
        #
        #    return salesLine.RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existRegisteredReceivedInvoicedLines
        #public boolean existRegisteredReceivedInvoicedLines()
        #{
        #    boolean                           ret;
        #    SalesLine                         salesLine;
        #    InterCompanyPurchSalesReference   interCompanyPurchSalesReference;
        #    PurchTable                        purchTable;
        #    SalesTable                        salesTable;
        #    ;
        #    select firstonly salesLine
        #           where salesLine.SalesId      == this.SalesId
        #           &&   (salesLine.ReturnStatus == ReturnStatusLine::Registered
        #              || salesLine.ReturnStatus == ReturnStatusLine::Quarantine
        #              || salesLine.ReturnStatus == ReturnStatusLine::Received
        #              || salesLine.ReturnStatus == ReturnStatusLine::Invoiced);
        #
        #    ret = salesLine.RecId != 0;
        #
        #    if (!ret)
        #    {
        #        while select interCompanyPurchSalesReference
        #              where interCompanyPurchSalesReference.SalesId == this.SalesId
        #        join purchTable
        #             where purchTable.PurchId == interCompanyPurchSalesReference.PurchId
        #             &&    purchTable.InterCompanyOrder
        #        {
        #            changecompany(purchTable.InterCompanyCompanyId)
        #            {
        #                salesTable = null;
        #                salesTable = SalesTable::find(purchTable.InterCompanySalesId);
        #                ret = salesTable.existRegisteredReceivedInvoicedLines();
        #            }
        #            if (ret)
        #                break;
        #        }
        #    }
        #
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #existSalesLine
        #boolean existSalesLine()
        #{
        #    Query       query;
        #    QueryRun    queryRun;
        #    SalesLine   salesLine;
        #    ;
        #    query = this.querySalesLine();
        #    query.dataSourceTable(tablenum(SalesLine)).firstOnly(true);
        #
        #    queryRun = new QueryRun(query);
        #    while (queryRun.next())
        #    {
        #        if (queryRun.changed(tablenum(SalesLine)))
        #        {
        #            salesLine = queryRun.get(tablenum(SalesLine));
        #            if (salesLine.RecId)
        #            {
        #                break;
        #            }
        #        }
        #    }
        #
        #    return salesLine.RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existShippedNotInvoiced
        #public boolean existShippedNotInvoiced()
        #{
        #    SalesLine   salesLine;
        #    InventTrans inventTrans;
        #    ;
        #
        #    select firstonly RecId from inventTrans
        #        where (inventTrans.StatusIssue == StatusIssue::Deducted) ||
        #              (inventTrans.StatusReceipt == StatusReceipt::Received)
        #        join salesLine
        #            where (salesLine.InventTransId == inventTrans.InventTransId) &&
        #                  (salesLine.SalesId == this.SalesId);
        #
        #    return (inventTrans.RecId!= 0);
        #}
      ENDSOURCE
      SOURCE #fieldChanged
        #boolean  fieldChanged(fieldId  fieldId)
        #{
        #    boolean  ok = false;
        #    ;
        #
        #    if (!this.RecId)
        #        ok = true;
        #
        #    if (this.orig().(fieldId) != this.(fieldId))
        #        ok = true;
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #fixedEuroTriangulation
        #UnknownNoYes fixedEuroTriangulation()
        #{
        #    if (this.SettleVoucher == SettlementType::SelectedTransact && SalesParameters::find().UseSettleExchRate)
        #    {
        #        if (this.settleExchRate())
        #        {
        #            return UnknownNoYes::No;
        #        }
        #    }
        #
        #    if (this.FixedExchRate)
        #    {
        #        return UnknownNoYes::No;
        #    }
        #
        #    return UnknownNoYes::Unknown;
        #}
      ENDSOURCE
      SOURCE #fixedExchRate
        #CustExchRate fixedExchRate(boolean throwOnError = false)
        #{
        #    ExchRate exchRate = 0;
        #    ;
        #    if (this.SettleVoucher == SettlementType::SelectedTransact && SalesParameters::find().UseSettleExchRate)
        #    {
        #        exchRate = this.settleExchRate(throwOnError);
        #    }
        #
        #    if (!exchRate)
        #    {
        #        exchRate = this.FixedExchRate;
        #    }
        #
        #    return exchRate;
        #}
      ENDSOURCE
      SOURCE #fixedExchRateSecondary
        #ExchrateSecondary fixedExchRateSecondary()
        #{
        #/*
        #//  Should always return zero
        #    return (this.FixedExchRate ? 0 : 0);
        #*/
        #    return (0);
        #}
        #
      ENDSOURCE
      SOURCE #hasCODPaymentMethod
        #/// <summary>
        #/// Checks if the sales order's payment method is COD.
        #/// </summary>
        #/// <returns>
        #/// true if the payment method is COD; otherwise, false.
        #/// </returns>
        #public boolean hasCODPaymentMethod()
        #{
        #    ;
        #
        #    return this.payment().PaymMethod == NetCurrent::COD;
        #}
      ENDSOURCE
      SOURCE #initDefaultReturnAddress
        #public void initDefaultReturnAddress()
        #{
        #    CompanyInfo companyInfo = CompanyInfo::find();
        #    Address     address     = Address::find(companyInfo.TableId, companyInfo.RecId, AddressType::Delivery);
        #    ;
        #
        #    if (address)
        #    {
        #        this.setAddress(address);
        #    }
        #    else
        #    {
        #        this.DeliveryName               = companyInfo.Name;
        #        this.DeliveryAddress            = companyInfo.Address;
        #        this.DeliveryZipCode            = companyInfo.ZipCode;
        #        this.DeliveryCountryRegionId    = companyInfo.CountryRegionId;
        #        this.DeliveryState              = companyInfo.State;
        #        this.DeliveryCounty             = companyInfo.County;
        #        this.DeliveryStreet             = companyInfo.Street;
        #        this.DeliveryCity               = companyInfo.City;
        #        this.AddressRefRecId            = companyInfo.RecId;
        #        this.AddressRefTableId          = companyInfo.TableId;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromContactInfo
        #void initFromContactInfo()
        #{
        #    ContactPerson contactPerson = this.contactPerson();
        #
        #    if (this.ContactPersonId && contactPerson.Email)
        #        this.Email = contactPerson.Email;
        #    else
        #        this.Email = this.custTable_CustAccount().Email;
        #
        #    if (this.ContactPersonId && contactPerson.url)
        #        this.url = contactPerson.url;
        #}
        #
      ENDSOURCE
      SOURCE #initFromCustConfirmJour
        #void  initFromCustConfirmJour(CustConfirmJour  custConfirmJour)
        #{
        #    this.DlvTerm                = custConfirmJour.DlvTerm;
        #    this.DlvMode                = custConfirmJour.DlvMode;
        #    this.LanguageId             = custConfirmJour.LanguageId;
        #    this.Payment                = custConfirmJour.Payment;
        #    this.CashDisc               = custConfirmJour.CashDiscCode;
        #    this.CurrencyCode           = custConfirmJour.CurrencyCode;
        #    this.Dimension              = this.copyDimension(custConfirmJour.Dimension);
        #    this.InclTax                = custConfirmJour.InclTax;
        #}
      ENDSOURCE
      SOURCE #initFromCustInvoiceJour
        #void initFromCustInvoiceJour(CustInvoiceJour custInvoiceJour)
        #{
        #    this.LanguageId                 = custInvoiceJour.LanguageId;
        #    this.Payment                    = custInvoiceJour.Payment;
        #    this.NumberSequenceGroup        = custInvoiceJour.NumberSequenceGroup;
        #    this.CashDisc                   = custInvoiceJour.CashDiscCode;
        #
        #    if(TaxParameters::find().CashDiscOnInvoice)
        #        this.CashDiscPercent        = custInvoiceJour.CashDiscPercent;
        #
        #    this.CurrencyCode               = custInvoiceJour.CurrencyCode;
        #    this.DlvTerm                    = custInvoiceJour.DlvTerm;
        #    this.DlvMode                    = custInvoiceJour.DlvMode;
        #    this.Dimension                  = this.copyDimension(custInvoiceJour.Dimension);
        #    this.InclTax                    = custInvoiceJour.InclTax;
        #    this.SalesOriginId              = custInvoiceJour.SalesOriginId;
        #    this.setShipCarrierInformation(null, null, custInvoiceJour);
        #}
      ENDSOURCE
      SOURCE #initFromCustPackingSlipJour
        #void  initFromCustPackingSlipJour(CustPackingSlipJour custPackingSlipJour)
        #{;
        #    this.LanguageId                 = custPackingSlipJour.LanguageId;
        #    this.DlvTerm                    = custPackingSlipJour.DlvTerm;
        #    this.DlvMode                    = custPackingSlipJour.DlvMode;
        #    this.DlvReason                  = custPackingSlipJour.DlvReason;
        #    this.Dimension                  = this.copyDimension(custPackingSlipJour.Dimension);
        #    this.setShipCarrierInformation(null, custPackingSlipJour);
        #}
      ENDSOURCE
      SOURCE #initFromCustQuotationJour
        #void  initFromCustQuotationJour(CustQuotationJour  custQuotationJour)
        #{
        #    this.DlvTerm                = custQuotationJour.DlvTerm;
        #    this.DlvMode                = custQuotationJour.DlvMode;
        #    this.LanguageId             = custQuotationJour.LanguageId;
        #    this.Payment                = custQuotationJour.Payment;
        #    this.CashDisc               = custQuotationJour.CashDiscCode;
        #    this.CurrencyCode           = custQuotationJour.CurrencyCode;
        #    this.Dimension              = this.copyDimension(custQuotationJour.Dimension);
        #    this.InclTax                = custQuotationJour.InclTax;
        #}
      ENDSOURCE
      SOURCE #InitFromCustTable
        #server void  initFromCustTable()
        #{
        #    Address         address;
        #    CustTable       custTable   = this.custTable_CustAccount();
        #    CustTable       custTable_InvoiceAccount;
        #    CustParameters  custParameters;
        #    DlvMode         dlvMode;
        #    boolean         useInvoiceAccount = false;
        #    ;
        #    custParameters = CustParameters::find();
        #
        #    this.CustAccount                = custTable.AccountNum;
        #    this.SalesName                  = custTable.Name;
        #    this.DeliveryName               = custTable.Name;
        #
        #    this.DeliveryAddress            = custTable.Address;
        #    this.DeliveryZipCode            = custTable.ZipCode;
        #    this.DeliveryCounty             = custTable.County;
        #    this.DeliveryCountryRegionId    = custTable.CountryRegionId;
        #    this.DeliveryState              = custTable.State;
        #    this.DeliveryStreet             = custTable.Street;
        #    this.DeliveryCity               = custTable.City;
        #    this.AddressRefRecId            = custTable.RecId;
        #    this.AddressRefTableId          = custTable.TableId;
        #
        #    this.setTaxGroup(TaxSales::custTaxGroup(custTable.DlvTerm, custTable.TaxGroup));
        #    this.InclTax                    = custTable.InclTax;
        #    this.PriceGroupId               = custTable.PriceGroup;
        #    this.LineDisc                   = custTable.LineDisc;
        #    this.MultiLineDisc              = custTable.MultiLineDisc;
        #    this.EndDisc                    = custTable.EndDisc;
        #    this.MarkupGroup                = custTable.MarkupGroup;
        #    this.url                        = custTable.url;
        #    this.Email                      = custTable.Email;
        #    this.FreightZone                = custTable.FreightZone;
        #    this.SalesGroup                 = custTable.SalesGroup;
        #    this.CommissionGroup            = custTable.CommissionGroup;
        #    this.InventLocationId           = custTable.InventLocation;
        #    this.setInventSiteId(custTable.InventSiteId);
        #
        #    this.LanguageId                 = custTable.LanguageId;
        #
        #    this.CurrencyCode               = custTable.Currency;
        #    this.InvoiceAccount             = custTable.InvoiceAccount  ? custTable.InvoiceAccount
        #                                                                : custTable.AccountNum;
        #    custTable_InvoiceAccount        = this.custTable_InvoiceAccount();
        #    this.vatNum                     = custTable.vatNum;
        #    this.EnterpriseNumber           = custTable.EnterpriseNumber;
        #    this.NumberSequenceGroup        = custTable_InvoiceAccount.NumberSequenceGroup;
        #
        #    switch(custParameters.UseFiscalInvoiceAccount)
        #    {
        #        case UseFiscalInvoiceAccount::Always:
        #            useInvoiceAccount = true;
        #            break;
        #        case UseFiscalInvoiceAccount::Ask:
        #            if(this.CustAccount != this.InvoiceAccount)
        #            {
        #                if (Box::yesNo("@SYS112098"+'\n\n'+this.InvoiceAccount+'\n\n'+CustTable::promptAddress(this.InvoiceAccount, AddressType::Delivery),DialogButton::Yes)==DialogButton::Yes)
        #                {
        #                    useInvoiceAccount = true;
        #                }
        #            }
        #            break;
        #        case UseFiscalInvoiceAccount::Never:
        #            break;
        #    }
        #
        #    if(useInvoiceAccount)
        #    {
        #        this.vatNum = custTable_InvoiceAccount.vatNum;
        #        this.setTaxGroup(TaxSales::custTaxGroup(custTable_InvoiceAccount.DlvTerm, custTable_InvoiceAccount.TaxGroup));
        #        if(custParameters.CustNameFromVATNum)
        #        {
        #            this.setNameUsingVATNum(custTable_InvoiceAccount.vatNum,
        #                                    custTable_InvoiceAccount.CountryRegionId,
        #                                    custTable_InvoiceAccount.Name,
        #                                    custParameters);
        #        }
        #    }
        #    else
        #    {
        #        if(custParameters.CustNameFromVATNum)
        #        {
        #            this.setNameUsingVATNum(this.vatNum,
        #                                    this.DeliveryCountryRegionId,
        #                                    this.DeliveryName,
        #                                    custParameters);
        #        }
        #    }
        #
        #    this.initFromCustTableMandatoryFields();
        #
        #    this.Dimension                  = this.copyDimension(custTable.Dimension);
        #    this.DlvTerm                    = custTable.DlvTerm;
        #    this.DlvMode                    = custTable.DlvMode;
        #    this.DlvReason                  = custTable.DlvReason;
        #    this.CashDisc                   = custTable.CashDisc;
        #    dlvMode                         = DlvMode::find(custTable.DlvMode);
        #    if (this.DlvMode)
        #    {
        #        this.ShipCarrierId              = dlvMode.ShipCarrierId;
        #        this.ShipCarrierAccountCode     = dlvMode.ShipCarrierAccountCode;
        #        this.ShipCarrierDlvType         = dlvMode.ShipCarrierDlvType;
        #    }
        #
        #    if(custTable.CashDisc)
        #        this.CashDiscPercent        = CashDisc::find(custTable.CashDisc).Percent;
        #
        #    this.Payment                    = custTable.PaymTermId;
        #    this.initFromPayment();
        #    if (custTable.PaymSched)
        #    {
        #        this.PaymentSched               = custTable.PaymSched;
        #    }
        #    this.PaymMode                   = custTable.PaymMode;
        #    this.PaymSpec                   = custTable.PaymSpec;
        #
        #    this.PostingProfile             = CustParameters::find().PostingProfile;
        #    this.CashDisc                   = custTable.CashDisc;
        #
        #    this.CreditCardCustRefId        = 0;
        #
        #    address = DirPartyAddress::findAddress(custTable, AddressType::Delivery);
        #    if (address)
        #    {
        #        this.setAddress(address);
        #    }
        #
        #    this.ContactPersonId            = custTable.ContactPersonId;
        #    this.initFromContactInfo();
        #
        #    this.setListCode();
        #
        #    this.SalesPoolId                = SalesParameters::find().SalesPoolId;
        #    if (custTable.SalesPoolId)
        #        this.SalesPoolId            = custTable.SalesPoolId;
        #
        #    this.GiroType                   = custTable.GiroType;
        #
        #    this.ItemTagging                = custTable.rfidItemTagging;
        #    this.CaseTagging                = custTable.rfidCaseTagging;
        #    this.PalletTagging              = custTable.rfidPalletTagging;
        #
        #    this.InterCompanyOrder          = custTable.interCompanyAccount();
        #    if (this.InterCompanyOrder)
        #        this.InterCompanyCompanyId  = custTable.interCompanyCompanyId();
        #    if (this.SalesType == SalesType::ItemReq
        #    ||  this.SalesType == SalesType::ReturnItem)
        #    {
        #        this.InterCompanyAutoCreateOrders   = false;
        #        this.InterCompanyDirectDelivery     = false;
        #    }
        #    else
        #    {
        #        this.InterCompanyAutoCreateOrders   = custTable.InterCompanyAutoCreateOrders;
        #        this.InterCompanyDirectDelivery     = custTable.InterCompanyDirectDelivery;
        #    }
        #    this.InterCompanyAllowIndirectCreation  = custTable.InterCompanyAllowIndirectCreation;
        #    if (CustParameters::find().CustPaym_NO == NoYes::Yes)
        #    {
        #        this.BankCentralBankPurposeCode = custTable.BankCentralBankPurposeCode;
        #        this.BankCentralBankPurposeText = custTable.BankCentralBankPurposeText;
        #    }
        #
        #    this.ShipCarrierFuelSurcharge   = custTable.ShipCarrierFuelSurcharge;
        #    if (!address)
        #    {
        #        address = Address::find(
        #            tablenum(DirPartyTable),
        #            DirPartyTable::find(custTable.PartyId).RecId,
        #            AddressType::Invoice);
        #    }
        #    this.ShipCarrierResidential     = address.ShipCarrierResidential;
        #    this.ShipCarrierBlindShipment   = address.ShipCarrierBlindShipment;
        #    this.ShipCarrierAccount         = address.ShipCarrierAccount;
        #    dlvMode                         = DlvMode::find(address.DlvMode);
        #    if (dlvMode)
        #    {
        #        this.DlvMode                    = address.DlvMode;
        #        this.ShipCarrierId              = dlvMode.ShipCarrierId;
        #        this.ShipCarrierAccountCode     = dlvMode.ShipCarrierAccountCode;
        #        this.ShipCarrierDlvType         = dlvMode.ShipCarrierDlvType;
        #    }
        #    if (address.DlvTerm)
        #    {
        #        this.DlvTerm = address.DlvTerm;
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #initFromCustTableMandatoryFields
        #server void  initFromCustTableMandatoryFields()
        #{
        #    CustTable   custTable = this.custTable_CustAccount();
        #    ;
        #
        #    this.CustGroup                  = custTable.CustGroup;
        #}
        #
      ENDSOURCE
      SOURCE #initFromPayment
        #void initFromPayment()
        #{
        #    this.PaymentSched = this.payment().PaymSched;
        #    this.FixedDueDate = dateNull();
        #}
      ENDSOURCE
      SOURCE #initFromProjInvoiceJour
        #void initFromProjInvoiceJour(ProjInvoiceJour projInvoiceJour)
        #{
        #    this.LanguageId                 = projInvoiceJour.LanguageId;
        #    this.Payment                    = projInvoiceJour.Payment;
        #    this.NumberSequenceGroup        = projInvoiceJour.NumberSequenceGroupId;
        #    this.CashDisc                   = projInvoiceJour.CashDiscCode;
        #
        #    if(TaxParameters::find().CashDiscOnInvoice)
        #        this.CashDiscPercent        = projInvoiceJour.CashDiscPercent;
        #
        #    this.CurrencyCode               = projInvoiceJour.CurrencyId;
        #    this.DlvTerm                    = projInvoiceJour.DlvTerm;
        #    this.DlvMode                    = projInvoiceJour.DlvMode;
        #    this.Dimension                  = this.copyDimension(projInvoiceJour.Dimension);
        #}
        #
      ENDSOURCE
      SOURCE #initFromProjInvoiceTable
        #void initFromProjInvoiceTable()
        #{
        #    ProjTable           projTable;
        #    ProjInvoiceTable    projInvoiceTable;
        #    ;
        #    projTable               = this.projTable();
        #    projInvoiceTable        = projTable.projInvoice();
        #
        #    this.TransactionCode    = projInvoiceTable.TransactionCodeId;
        #    this.Listcode           = projInvoiceTable.ListCodeId;
        #    this.Dimension          = this.copyDimension(projTable.Dimension);
        #    this.Payment            = projInvoiceTable.Payment;
        #
        #    this.FixedExchRate = ProjInvoiceCurrency::find(projInvoiceTable.ProjInvoiceProjId,this.CurrencyCode).ExchRate;
        #
        #    if (CustParameters::find().CustPaym_NO == NoYes::Yes)
        #    {
        #        this.BankCentralBankPurposeCode = projInvoiceTable.BankCentralBankPurposeCode;
        #        this.BankCentralBankPurposeText = projInvoiceTable.BankcentralBankPurposeText;
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #initFromProjTable
        #void initFromProjTable(ProjTable _projTable)
        #{
        #    if(_projTable.RecId)
        #    {
        #        this.ProjId             = _projTable.ProjId;
        #        this.CustAccount        = _projTable.CustAccount;
        #
        #        this.initFromCustTable();
        #
        #        this.InvoiceAccount     = _projTable.type().invoiceAccount();
        #        this.initInvoiceAccount();
        #
        #        this.initFromProjInvoiceTable();
        #
        #        this.CurrencyCode               = _projTable.currencyId();
        #        this.InclTax                    = NoYes::No;
        #        this.DeliveryName               = _projTable.DlvName;
        #        this.DeliveryAddress            = _projTable.DlvAddr;
        #        this.DeliveryStreet             = _projTable.DeliveryStreet;
        #        this.DeliveryZipCode            = _projTable.DlvZipCode;
        #        this.DeliveryCity               = _projTable.DeliveryCity;
        #        this.DeliveryCountryRegionId    = _projTable.DlvCountryRegionId;
        #        this.DeliveryCounty             = _projTable.DlvCounty;
        #        this.DeliveryState              = _projTable.DlvState;
        #    }
        #
        #}
        #
        #
        #
      ENDSOURCE
      SOURCE #initFromSalesBasket
        #void initFromSalesBasket(SalesBasket salesBasket)
        #{
        #    this.ContactPersonId        = salesBasket.ContactPersonId;
        #
        #    this.DeliveryDateControlType = SalesDeliveryDateControlType::None;
        #    this.ShippingDateRequested   = salesBasket.DeliveryDate;
        #    this.ReceiptDateRequested    = salesBasket.DeliveryDate;
        #}
        #
      ENDSOURCE
      SOURCE #initFromSalesQuotationTable
        #void initFromSalesQuotationTable(SalesQuotationTable    _salesQuotationTable)
        #{
        #    ;
        #    this.QuotationId                = _salesQuotationTable.QuotationId;
        #
        #    this.CustAccount                = _salesQuotationTable.CustAccount;
        #    this.initFromCustTable();
        #
        #    this.CurrencyCode               = _salesQuotationTable.CurrencyCode;
        #
        #    if (_salesQuotationTable.InvoiceAccount)
        #    {
        #        this.InvoiceAccount         =  _salesQuotationTable.InvoiceAccount;
        #    }
        #
        #    this.SmmCampaignId              = _salesQuotationTable.CampaignId;
        #
        #    this.SalesName                  = _salesQuotationTable.QuotationName;
        #    this.DeliveryDate               = _salesQuotationTable.DeliveryDate;
        #    this.Deadline                   = _salesQuotationTable.QuotationExpiryDate;
        #
        #    this.ContactPersonId            = _salesQuotationTable.ContactPersonId;
        #    this.CustomerRef                = _salesQuotationTable.CustomerRef;
        #    this.PurchOrderFormNum          = _salesQuotationTable.CustPurchaseOrder;
        #    this.Dimension                  = this.copyDimension(_salesQuotationTable.Dimension);
        #    this.DeliveryName               = _salesQuotationTable.DeliveryName;
        #
        #    this.TransactionCode            = _salesQuotationTable.TransactionCode;
        #    this.Transport                  = _salesQuotationTable.Transport;
        #    this.Port                       = _salesQuotationTable.Port;
        #    this.StatProcId                 = _salesQuotationTable.StatProcId;
        #    this.Listcode                   = _salesQuotationTable.Listcode;
        #    this.CountyOrigDest             = _salesQuotationTable.CountyOrigDest;
        #
        #    if (_salesQuotationTable.DeliveryAddress)
        #    {
        #        this.DeliveryAddress        = _salesQuotationTable.DeliveryAddress;
        #        this.DeliveryCity           = _salesQuotationTable.DeliveryCity;
        #        this.DeliveryCounty         = _salesQuotationTable.DeliveryCounty;
        #        this.DeliveryCountryRegionId= _salesQuotationTable.DeliveryCountryRegionId;
        #        this.DeliveryState          = _salesQuotationTable.DeliveryState;
        #        this.DeliveryStreet         = _salesQuotationTable.DeliveryStreet;
        #        this.DeliveryZipCode        = _salesQuotationTable.DeliveryZipCode;
        #        this.AddressRefRecId        = _salesQuotationTable.RecId;
        #        this.AddressRefTableId      = _salesQuotationTable.TableId;
        #    }
        #
        #    this.vatNum                     = _salesQuotationTable.vatNum;
        #    this.TaxGroup                   = _salesQuotationTable.TaxGroup;
        #    this.InclTax                    = _salesQuotationTable.InclTax;
        #
        #    this.CashDisc                   = _salesQuotationTable.CashDisc;
        #
        #    if(TaxParameters::find().CashDiscOnInvoice)
        #        this.CashDiscPercent        = _salesQuotationTable.CashDiscPercent;
        #
        #    this.DiscPercent                = _salesQuotationTable.DiscPercent;
        #    this.EndDisc                    = _salesQuotationTable.EndDisc;
        #    this.LineDisc                   = _salesQuotationTable.LineDisc;
        #    this.MultiLineDisc              = _salesQuotationTable.MultiLineDisc;
        #    this.CommissionGroup            = _salesQuotationTable.CommissionGroup;
        #
        #    this.DlvMode                    = _salesQuotationTable.DlvMode;
        #    this.DlvTerm                    = _salesQuotationTable.DlvTerm;
        #
        #    this.SalesGroup                 = _salesQuotationTable.SalesGroup;
        #    this.PriceGroupId               = _salesQuotationTable.PriceGroupId;
        #    this.MarkupGroup                = _salesQuotationTable.MarkupGroup;
        #    this.Payment                    = _salesQuotationTable.Payment;
        #    this.PostingProfile             = _salesQuotationTable.PostingProfile;
        #    this.SalesResponsible           = _salesQuotationTable.SalesResponsible;
        #    this.SalesTaker                 = _salesQuotationTable.SalesTaker;
        #    this.SalesUnitId                = _salesQuotationTable.SalesUnitId;
        #
        #    this.ShippingDateRequested      = _salesQuotationTable.ShippingDateRequested;
        #    this.ReceiptDateRequested       = _salesQuotationTable.ReceiptDateRequested;
        #    this.InventLocationId           = _salesQuotationTable.InventLocationId;
        #    this.setInventSiteId(_salesQuotationTable.InventSiteId);
        #}
      ENDSOURCE
      SOURCE #initFromSalesTable
        #void initFromSalesTable(SalesTable salesTable)
        #{
        #    this.LanguageId                 = salesTable.LanguageId;
        #    this.Payment                    = salesTable.Payment;
        #    this.PaymMode                   = salesTable.PaymMode;
        #    this.PaymSpec                   = salesTable.PaymSpec;
        #    this.NumberSequenceGroup        = salesTable.NumberSequenceGroup;
        #    this.CashDisc                   = salesTable.CashDisc;
        #    this.CurrencyCode               = salesTable.CurrencyCode;
        #    this.DlvTerm                    = salesTable.DlvTerm;
        #    this.DlvMode                    = salesTable.DlvMode;
        #    this.DlvReason                  = salesTable.DlvReason;
        #    this.Dimension                  = this.copyDimension(salesTable.Dimension);
        #    this.setTaxGroup(salesTable.TaxGroup);
        #    this.InclTax                    = salesTable.InclTax;
        #    this.Transport                  = salesTable.Transport;
        #    this.Port                       = salesTable.Port;
        #    this.StatProcId                 = salesTable.StatProcId;
        #
        #    this.DeliveryName               = salesTable.DeliveryName;
        #    this.DeliveryAddress            = salesTable.DeliveryAddress;
        #    this.DeliveryZipCode            = salesTable.DeliveryZipCode;
        #    this.DeliveryCountryRegionId    = salesTable.DeliveryCountryRegionId;
        #    this.DeliveryState              = salesTable.DeliveryState;
        #    this.DeliveryCounty             = salesTable.DeliveryCounty;
        #    this.DeliveryStreet             = salesTable.DeliveryStreet;
        #    this.DeliveryCity               = salesTable.DeliveryCity;
        #    this.AddressRefRecId            = salesTable.RecId;
        #    this.AddressRefTableId          = salesTable.TableId;
        #    this.setShipCarrierInformation(salesTable);
        #}
      ENDSOURCE
      SOURCE #InitInvoiceAccount
        #void  initInvoiceAccount()
        #{
        #    CustTable       custTable;
        #    ;
        #    custTable = this.custTable_InvoiceAccount();
        #
        #    this.NumberSequenceGroup    = custTable.NumberSequenceGroup;
        #    this.Payment                = custTable.PaymTermId;
        #    this.initFromPayment();
        #    if (custTable.PaymSched)
        #    {
        #        this.PaymentSched   = custTable.PaymSched;
        #    }
        #    this.PaymMode               = custTable.PaymMode;
        #    this.PaymSpec               = custTable.PaymSpec;
        #    this.CashDisc               = custTable.CashDisc;
        #    this.setListCode();
        #}
      ENDSOURCE
      SOURCE #initReturnFromSalesTable
        #void initReturnFromSalesTable(SalesTable _other)
        #{
        #    this.CustAccount        = _other.CustAccount;
        #    this.CustGroup          = _other.CustGroup;
        #    this.InvoiceAccount     = _other.InvoiceAccount;
        #
        #    this.initFromCustTable();
        #    this.initFromSalesTable(_other);
        #
        #    this.DeliveryDateControlType = SalesDeliveryDateControlType::None;
        #    this.ShippingDateRequested   = _other.DeliveryDate;
        #    this.ReceiptDateRequested    = _other.DeliveryDate;
        #
        #    this.SalesId            = NumberSeq::newGetNum(SalesParameters::numRefSalesId()).num();
        #    this.ReturnItemNum      = NumberSeq::newGetNum(SalesParameters::numRefReturnItemNum()).num();
        #
        #    this.SalesType          = SalesType::ReturnItem;
        #    this.ReturnStatus       = ReturnStatusHeader::Created;
        #
        #}
        #
      ENDSOURCE
      SOURCE #InitValue
        #void initValue()
        #{
        #    ;
        #
        #    super();
        #
        #    this.initValue_Server();
        #}
      ENDSOURCE
      SOURCE #initValue_Server
        #server void initValue_Server()
        #{
        #    SalesTableType salesTableType;
        #    ;
        #
        #    salesTableType = this.type();
        #    salesTableType.initValue();
        #
        #    if (smmLicense::CRM())
        #    {
        #        this.SalesResponsible   = smmUtility::getCurrentContact();
        #        this.SalesUnitId        = smmUtility::getCurrentSalesUnit();
        #    }
        #}
      ENDSOURCE
      SOURCE #insert
        #void insert()
        #{
        #    SalesTableType salesTableType;
        #    ;
        #
        #    if (!this.SalesId)
        #        throw(error(strfmt("@SYS26332", fieldid2pname(tablenum(SalesTable), fieldnum(SalesTable, SalesId)))));
        #    ttsbegin;
        #
        #    salesTableType = this.type();
        #    salesTableType.insert();
        #
        #    if (TradeBLWIParameters::find().ActivateBLWI == NoYes::Yes)
        #    {
        #        TradeBLWIJournalPurposeCodes::createRecord(TradeBLWICustVend::Customer, this.RecId, this.CustAccount, TradeBLWITypeOfForm::SalesTable);
        #    }
        #    ttscommit;
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyAllowIndirectCreationOrig
        #// BP Deviation documented
        #display InterCompanyAllowIndirectCreationTxt interCompanyAllowIndirectCreationOrig()
        #{
        #    InterCompanyAllowIndirectCreationTxt interCompanyAllowIndirectCreationTxt;
        #    ;
        #    if (this.InterCompanyDirectDeliveryOrig
        #    && !this.InterCompanyAllowIndirectCreationOrig)
        #    {
        #        interCompanyAllowIndirectCreationTxt = "@SYS95179";
        #    }
        #    return interCompanyAllowIndirectCreationTxt;
        #}
      ENDSOURCE
      SOURCE #interCompanyCheckCurrency
        #boolean interCompanyCheckCurrency()
        #{
        #    MarkupTrans     markupTrans;
        #    ;
        #    if (this.isInterCompanyOrder()
        #    &&  this.CurrencyCode != this.orig().CurrencyCode)
        #    {
        #        if (SalesLine::exist(this.SalesId))
        #            return checkFailed(strfmt("@SYS105402"));
        #
        #        select firstonly markupTrans
        #               index hint TableRecIdIdx
        #               where markupTrans.TransTableId == this.TableId
        #               &&    markupTrans.TransRecId   == this.RecId;
        #        if (markupTrans)
        #        {
        #            return checkFailed(strfmt("@SYS105402"));
        #        }
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #interCompanyDirectDeliveryReturn
        #/// <summary>
        #/// Set InterCompanyAutoCreateOrders and InterCompanyAllowIndirectCreate to
        #///     the value of InterCompanyDirectDelivery.
        #/// This is used, when the InterCompanyDirectDelivery is changed for a Return order.
        #/// </summary>
        #public void interCompanyDirectDeliveryReturn()
        #{;
        #    this.InterCompanyAutoCreateOrders      = this.InterCompanyDirectDelivery;
        #    this.InterCompanyAllowIndirectCreation = this.InterCompanyDirectDelivery;
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyEndpointActionPolicy
        #InterCompanyEndpointActionPolicy interCompanyEndpointActionPolicy(boolean _forUpdate = false)
        #{
        #    #InterCompany
        #    AifActionId                      defaultSalesOrderAction = #DefaultSalesOrderAction;
        #    InterCompanyEndpointActionPolicy interCompanyEndpointActionPolicy;
        #;
        #    if (this.DataAreaId != curext())
        #    {
        #        changecompany(this.DataAreaId)
        #        {
        #            interCompanyEndpointActionPolicy = InterCompanyEndpointActionPolicy::find(AifEndpointConstraint::findInterCompanyEndpointId(CustTable::find(this.CustAccount)),defaultSalesOrderAction,_forUpdate);
        #        }
        #    }
        #    else
        #    {
        #        interCompanyEndpointActionPolicy = InterCompanyEndpointActionPolicy::find(AifEndpointConstraint::findInterCompanyEndpointId(CustTable::find(this.CustAccount)),defaultSalesOrderAction,_forUpdate);
        #    }
        #    return interCompanyEndpointActionPolicy;
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyNonICExist
        #public boolean interCompanyNonICExist()
        #{
        #    SalesLine   salesLine;
        #    PurchLine   purchLine;
        #    ;
        #    select firstonly salesLine
        #           where salesLine.SalesId == this.SalesId
        #           &&   (salesLine.InventRefType != InventRefType::Purch
        #             || (salesLine.InventRefType == InventRefType::Purch
        #              && salesLine.InventRefTransId))
        #    notexists join purchLine
        #         where (purchLine.ItemRefType    == InventRefType::Sales
        #         &&     purchLine.InventTransId  == salesLine.InventRefTransId
        #         &&     purchLine.InterCompanyInventTransId);
        #
        #    return salesLine.RecId ? true : false;
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyOriginalSalesInfo
        #public server container interCompanyOriginalSalesInfo()
        #{
        #    InterCompanySalesType   salesType;
        #    SalesTable              salesTable;
        #    SalesStatus             salesStatus = SalesStatus::None;
        #    PurchTable              purchTable;
        #    PurchStatus             purchStatus = PurchStatus::None;
        #;
        #    if (this.InterCompanyOrder
        #    &&  this.InterCompanyCompanyId)
        #    {
        #        changecompany(this.InterCompanyCompanyId)
        #        {
        #            if (this.InterCompanyOriginalSalesId)
        #            {
        #                select SalesType, SalesStatus from salesTable
        #                       index hint SalesIdx
        #                       where salesTable.SalesId == this.InterCompanyOriginalSalesId;
        #                salesType   = enum2str(salesTable.SalesType);
        #                salesStatus = salesTable.SalesStatus;
        #            }
        #
        #            select PurchStatus from purchTable
        #                   index hint PurchIdx
        #                   where purchTable.PurchId == this.InterCompanyPurchId;
        #            purchStatus = purchTable.PurchStatus;
        #        }
        #    }
        #    return [purchStatus,salesType,salesStatus];
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyOriginDisplay
        #//BP Deviation Documented
        #display InterCompanyOriginDisplay interCompanyOriginDisplay()
        #{
        #    InterCompanyOriginDisplay   interCompanyOriginDisplay;
        #    DictEnum                    dictEnum = new DictEnum(enumnum(InterCompanyOrigin));
        #    ;
        #    if (this.InterCompanyOrder)
        #    {
        #        interCompanyOriginDisplay = dictEnum.value2Name(this.InterCompanyOrigin);
        #    }
        #    return interCompanyOriginDisplay;
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyPurchTable
        #PurchTable  interCompanyPurchTable(boolean  _forUpdate = false)
        #{
        #    PurchTable      purchTable;
        #;
        #    if (this.InterCompanyOrder
        #    &&  this.InterCompanyCompanyId
        #    &&  this.InterCompanyPurchId)
        #    {
        #        changecompany(this.InterCompanyCompanyId)
        #        {
        #            purchTable = PurchTable::find(this.InterCompanyPurchId, _forUpdate);
        #        }
        #
        #    }
        #    return purchTable;
        #}
      ENDSOURCE
      SOURCE #interCompanyReplacementRegistered
        #private boolean interCompanyReplacementRegistered()
        #{
        #    boolean                 ret;
        #    SalesLine               salesLine;
        #    ReturnDispositionCode   returnDispositionCode
        #    ;
        #    while select forceplaceholders salesLine
        #          where salesLine.SalesId       == this.SalesId
        #          &&    salesLine.InventRefType == InventRefType::Purch
        #          &&    salesLine.InventRefTransId
        #    join returnDispositionCode
        #         where returnDispositionCode.DispositionCodeId == salesLine.ReturnDispositionCodeId
        #    {
        #        if (salesLine.interCompanySalesLineExist()
        #        &&  returnDispositionCode.createReplacement())
        #        {
        #            ret = true;
        #            break;
        #        }
        #    }
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyUpdateNow
        #boolean  interCompanyUpdateNow()
        #{
        #    boolean  ok = false;
        #    ;
        #
        #    if (!this.RecId)
        #        ok = true;
        #
        #    if (this.orig().SalesType                       != this.SalesType
        #    ||  this.orig().CurrencyCode                    != this.CurrencyCode
        #    ||  this.orig().DlvTerm                         != this.DlvTerm
        #    ||  this.orig().DlvMode                         != this.DlvMode
        #    ||  this.orig().DeliveryDate                    != this.DeliveryDate
        #    ||  this.orig().ReceiptDateRequested            != this.ReceiptDateRequested
        #    ||  this.orig().ReceiptDateConfirmed            != this.ReceiptDateConfirmed
        #    ||  this.orig().ShippingDateRequested           != this.ShippingDateRequested
        #    ||  this.orig().ShippingDateConfirmed           != this.ShippingDateConfirmed
        #    ||  this.orig().DeliveryAddress                 != this.DeliveryAddress
        #    ||  this.orig().DeliveryName                    != this.DeliveryName
        #    ||  this.orig().DeliveryStreet                  != this.DeliveryStreet
        #    ||  this.orig().DeliveryZipCode                 != this.DeliveryZipCode
        #    ||  this.orig().DeliveryCountryRegionId         != this.DeliveryCountryRegionId
        #    ||  this.orig().DeliveryState                   != this.DeliveryState
        #    ||  this.orig().DeliveryCounty                  != this.DeliveryCounty
        #    ||  this.orig().InterCompanyOriginalSalesId     != this.InterCompanyOriginalSalesId
        #    ||  this.orig().InterCompanyOriginalCustAccount != this.InterCompanyOriginalCustAccount
        #    ||  this.orig().InterCompanyDirectDelivery      != this.InterCompanyDirectDelivery
        #    ||  this.orig().InterCompanyDirectDeliveryOrig  != this.InterCompanyDirectDeliveryOrig
        #    ||  this.orig().PurchOrderFormNum               != this.PurchOrderFormNum
        #    ||  this.orig().CustomerRef                     != this.CustomerRef
        #    ||  this.orig().ReturnItemNum                   != this.ReturnItemNum
        #    ||  this.orig().Dimension                       != this.Dimension
        #    ||  this.orig().DiscPercent                     != this.DiscPercent
        #    ||  this.orig().ReturnReasonCodeId              != this.ReturnReasonCodeId
        #    ||  this.orig().ReturnReplacementCreated        != this.ReturnReplacementCreated)
        #    {
        #        ok = true;
        #    }
        #
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #InventSiteActive
        #boolean inventSiteActive()
        #{;
        #    return classfactory.inventDimGlobal().inventSiteActiveWithoutItem();
        #}
      ENDSOURCE
      SOURCE #InvoiceName
        #//BP Deviation documented
        #display CustName invoiceName()
        #{
        #    return this.custTable_InvoiceAccount().Name;
        #}
        #
      ENDSOURCE
      SOURCE #isCreditCheckEligible
        #boolean isCreditCheckEligible()
        #{
        #    // returns true if the sales order is eligible/qualifies for credit limit check
        #
        #    return (this.SalesType != SalesType::Journal &&
        #            this.SalesType != SalesType::ItemReq &&
        #            this.SalesType != SalesType::Blanket);
        #}
      ENDSOURCE
      SOURCE #isInterCompanyOrder
        #boolean  isInterCompanyOrder()
        #{
        #    return (this.InterCompanyCompanyId != ''
        #        &&  this.InterCompanyOrder
        #        && !this.SkipUpdate
        #        &&  this.SalesType != SalesType::ItemReq);
        #}
      ENDSOURCE
      SOURCE #jumpRefReturnItemNum
        #void jumpRefReturnItemNum(Object object)
        #{
        #    Args            args;
        #    FormRun         formRun;
        #    ;
        #    args = new Args(formstr(ReturnTable));
        #    args.record(this);
        #    args.caller(object);
        #    formRun = classfactory.formRunClass(args);
        #    formRun.init();
        #    formRun.run();
        #    formRun.detach();
        #}
      ENDSOURCE
      SOURCE #LastConfirm
        #//BP Deviation documented
        #server display ConfirmId  lastConfirm()
        #{
        #    CustConfirmSalesLink    custConfirmSalesLink;
        #    CustConfirmJour         custConfirmJour;
        #    ;
        #    select firstonly TableId from custConfirmSalesLink
        #            index hint origSalesIdx
        #            order by ConfirmDate desc, ConfirmId desc
        #            where custConfirmSalesLink.OrigSalesId == this.SalesId
        #        join ConfirmDocNum from custConfirmJour
        #            where custConfirmJour.ConfirmId     == custConfirmSalesLink.ConfirmId   &&
        #                  custConfirmJour.ConfirmDate   == custConfirmSalesLink.ConfirmDate;
        #    return custConfirmJour.ConfirmDocNum;
        #}
      ENDSOURCE
      SOURCE #LastConfirmDate
        #//BP Deviation documented
        #server display TransDate lastConfirmDate()
        #{
        #    return (select maxof(ConfirmDate) from custConfirmSalesLink
        #                index hint origSalesIdx
        #                where custConfirmSalesLink.OrigSalesId == this.SalesId).ConfirmDate;
        #}
      ENDSOURCE
      SOURCE #LastInvoice
        #//BP Deviation documented
        #server display InvoiceId lastInvoice()
        #{
        #    ProjInvoiceItem projInvoiceItem;
        #    ;
        #
        #    if (!this.ProjId)
        #    {
        #        return (select firstonly InvoiceId
        #                from custInvoiceSalesLink
        #                index hint origSalesIdx
        #                order by InvoiceDate desc, InvoiceId desc
        #                where  custInvoiceSalesLink.OrigSalesId == this.SalesId).InvoiceId;
        #    }
        #    else
        #    {
        #        // This is invoiced from Project
        #        return (select firstonly ProjInvoiceId
        #                from projInvoiceItem
        #                index hint InvoiceIdx
        #                order by InvoiceDate desc, ProjInvoiceId desc
        #                where projInvoiceItem.SalesId == this.SalesId).ProjInvoiceId;
        #    }
        #}
      ENDSOURCE
      SOURCE #LastInvoiceDate
        #//BP Deviation documented
        #server display TransDate lastInvoiceDate()
        #{
        #    ProjInvoiceItem projInvoiceItem;
        #    ;
        #    if (!this.ProjId)
        #        return (select maxof(InvoiceDate) from custInvoiceSalesLink
        #                    index hint origSalesIdx
        #                    where  custInvoiceSalesLink.OrigSalesId == this.SalesId).InvoiceDate;
        #    else
        #        // This is invoiced from Project
        #        return (select maxof(InvoiceDate)
        #                from projInvoiceItem
        #                where projInvoiceItem.SalesId==this.SalesId).InvoiceDate;
        #}
      ENDSOURCE
      SOURCE #lastJournals
        #server container lastJournals()
        #{
        #    container  c;
        #    ;
        #
        #    c = conins(c, SalesTableType::posQuotation(),       [this.lastQuotation(),      this.lastQuotationDate()]);
        #    c = conins(c, SalesTableType::posConfirmation(),    [this.lastConfirm(),        this.lastConfirmDate()]);
        #    c = conins(c, SalesTableType::posPickingList(),     [this.lastPickingList(),    this.lastPickingListDate()]);
        #    c = conins(c, SalesTableType::posPackingSlip(),     [this.lastPackingSlip(),    this.lastPackingSlipDate()]);
        #    c = conins(c, SalesTableType::posInvoice(),         [this.lastInvoice(),        this.lastInvoiceDate()]);
        #
        #    return c;
        #}
      ENDSOURCE
      SOURCE #LastPackingSlip
        #//BP Deviation documented
        #server display PackingSlipId lastPackingSlip()
        #{
        #    return (select firstonly PackingSlipId from custPackingSlipSalesLink
        #                index hint origSalesIdx
        #                order by DeliveryDate desc, PackingSlipId desc
        #                where custPackingSlipSalesLink.OrigSalesId  == this.SalesId).PackingSlipId;
        #}
      ENDSOURCE
      SOURCE #LastPackingSlipDate
        #//BP Deviation documented
        #server display TransDate  lastPackingSlipDate()
        #{
        #    return (select maxof(DeliveryDate) from custPackingSlipSalesLink
        #                index hint origSalesIdx
        #                where custPackingSlipSalesLink.OrigSalesId  == this.SalesId).DeliveryDate;
        #}
      ENDSOURCE
      SOURCE #lastPickingList
        #//BP Deviation documented
        #server display WMSPickingRouteID  lastPickingList()
        #{
        #    return (select firstonly PickingRouteId from wmsPickingRouteLink
        #                order by ActivationDateTime desc, PickingRouteId desc
        #                where wmsPickingRouteLink.OrigInventTransRefId == this.SalesId).PickingRouteId;
        #}
        #
      ENDSOURCE
      SOURCE #lastPickingListDate
        #//BP Deviation documented
        #server display TransDate  lastPickingListDate()
        #{
        #    utcdatetime activationDateTime;
        #    ;
        #    activationDateTime =(select maxof(ActivationDateTime) from wmsPickingRouteLink
        #                where wmsPickingRouteLink.OrigInventTransRefId == this.SalesId).ActivationDateTime;
        #
        #    activationDateTime = DateTimeUtil::applyTimeZoneOffset(activationDateTime,DateTimeUtil::getUserPreferredTimeZone());
        #    return DateTimeUtil::date(activationDateTime);
        #}
        #
      ENDSOURCE
      SOURCE #LastQuotation
        #//BP Deviation documented
        #server display QuotationConfirmId lastQuotation()
        #{
        #    CustQuotationConfirmSalesLink   custQuotationConfirmSalesLink;
        #    CustQuotationConfirmJour        custQuotationConfirmJour;
        #    ;
        #
        #    select firstonly TableId from custQuotationConfirmSalesLink
        #            order by QuotationDate desc, QuotationConfirmId desc
        #            where custQuotationConfirmSalesLink.OrigQuotationId == this.QuotationId
        #        join QuotationDocNum from custQuotationConfirmJour
        #            where custQuotationConfirmJour.QuotationConfirmId   == custQuotationConfirmSalesLink.QuotationConfirmId   &&
        #                  custQuotationConfirmJour.QuotationDate        == custQuotationConfirmSalesLink.QuotationDate &&
        #                  custQuotationConfirmJour.QuotationType        == QuotationType::Sales;
        #
        #    return custQuotationConfirmJour.QuotationDocNum;
        #}
      ENDSOURCE
      SOURCE #LastQuotationDate
        #//BP Deviation documented
        #server display TransDate lastQuotationDate()
        #{;
        #    return (select maxof(QuotationDate) from custQuotationConfirmSalesLink
        #                where custQuotationConfirmSalesLink.OrigQuotationId == this.QuotationId).QuotationDate;
        #
        #}
      ENDSOURCE
      SOURCE #markupAllowed
        #public boolean markupAllowed()
        #{
        #    return this.type().markupAllowed();
        #}
      ENDSOURCE
      SOURCE #mayConfirmationBeUpdated
        #boolean mayConfirmationBeUpdated()
        #{
        #    return this.type().mayConfirmationBeUpdated();
        #}
        #
      ENDSOURCE
      SOURCE #mayInvoiceBeUpdated
        #boolean mayInvoiceBeUpdated()
        #{
        #    return this.type().mayInvoiceBeUpdated();
        #}
      ENDSOURCE
      SOURCE #mayPackingSlipBeUpdated
        #boolean mayPackingSlipBeUpdated()
        #{
        #    return this.type().mayPackingSlipBeUpdated();
        #}
      ENDSOURCE
      SOURCE #mayPickingListBeRegistrated
        #boolean mayPickingListBeRegistrated()
        #{
        #    ;
        #    return this.type().mayPickingListBeRegistrated();
        #}
        #
      ENDSOURCE
      SOURCE #mayPickingListBeUpdated
        #boolean mayPickingListBeUpdated()
        #{
        #    return this.type().mayPickingListBeUpdated();
        #}
        #
      ENDSOURCE
      SOURCE #mayProjectPackingSlipBeUpdated
        #boolean mayProjectPackingSlipBeUpdated()
        #{
        #    return this.type().mayProjectPackingSlipBeUpdated();
        #}
        #
        #
      ENDSOURCE
      SOURCE #modifiedField
        #public void modifiedField(fieldId _fieldId)
        #{
        #    AxSalesTable    axSalesTable;
        #    Object          formDataSource;
        #    SalesTableType  salesTableType;
        #    ;
        #
        #    super(_fieldId);
        #
        #    if (this.isFormDataSource())
        #    {
        #        if (formDataSourceHasMethod(this.dataSource(),classstr(AxSalesTable)))
        #        {
        #            formDataSource = this.dataSource();
        #            axSalesTable = formDataSource.axSalesTable();
        #        }
        #    }
        #    else
        #    {
        #        axSalesTable = this.axSalesTable();
        #    }
        #
        #    if (axSalesTable)
        #    {
        #        axSalesTable.setFieldAsTouched(_fieldId);
        #        axSalesTable.modify();
        #        if (this.dataSource())
        #        {
        #            if (formDataSourceHasMethod(this.dataSource(),identifierstr(fieldModified)))
        #            {
        #                formDataSource = this.dataSource();
        #                formDataSource.fieldModified();
        #            }
        #        }
        #    }
        #    else
        #    {
        #        salesTableType = this.type();
        #        salesTableType.modifiedField(_fieldId);
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #modifiedFieldDDC
        #/// <summary>
        #/// Processes the modified field event for delivery date control fields.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID for the modified field.
        #/// </param>
        #void modifiedFieldDDC(fieldId _fieldId) //Enhanced Delivery Date Control
        #{
        #    Object                      obj;
        #    SalesCalcAvailableDlvDates  calcAvailableDlvDates;
        #    container                   c;
        #    ;
        #    if (this.DeliveryDateControlType != SalesDeliveryDateControlType::None)
        #    {
        #        switch (_fieldId)
        #        {
        #            case fieldnum(SalesTable, DeliveryCountryRegionId): //fall through
        #            case fieldnum(SalesTable, DeliveryCounty):          //fall through
        #            case fieldnum(SalesTable, DeliveryState):           //fall through
        #            case fieldnum(SalesTable, DeliveryZipCode):         //fall through
        #            case fieldnum(SalesTable, DlvMode):                 //fall through
        #            case fieldnum(SalesTable, InventLocationId):
        #                if (!this.RecId)
        #                {
        #                    calcAvailableDlvDates = SalesCalcAvailableDlvDates::modifiedFieldOrderEntryDeadLine(this,_fieldId);
        #                }
        #                break;
        #
        #            case fieldnum(SalesTable, DeliveryDateControlType):
        #                if(this.RecId)
        #                {
        #                    calcAvailableDlvDates = SalesCalcAvailableDlvDates::modifiedField(this,_fieldId);
        #                }
        #                else
        #                {
        #                    calcAvailableDlvDates = SalesCalcAvailableDlvDates::modifiedFieldOrderEntryDeadLine(this,_fieldId);
        #                }
        #                break;
        #
        #            case fieldnum(SalesTable, ReceiptDateRequested):
        #                calcAvailableDlvDates = SalesCalcAvailableDlvDates::modifiedField(this,_fieldId);
        #
        #                if (this.ShippingDateRequested > this.ReceiptDateRequested)
        #                    this.ShippingDateRequested = this.ReceiptDateRequested;
        #                break;
        #
        #            case fieldnum(SalesTable, ShippingDateRequested):
        #                calcAvailableDlvDates = SalesCalcAvailableDlvDates::modifiedField(this,_fieldId);
        #
        #                if (this.ShippingDateRequested > this.ReceiptDateRequested)
        #                    this.ReceiptDateRequested = this.ShippingDateRequested;
        #                break;
        #
        #            case fieldnum(SalesTable, ShippingDateConfirmed):
        #                calcAvailableDlvDates = SalesCalcAvailableDlvDates::modifiedField(this,_fieldId);
        #
        #                if (this.ShippingDateConfirmed > this.ReceiptDateConfirmed)
        #                    this.ReceiptDateConfirmed = this.ShippingDateConfirmed;
        #                break;
        #
        #            case fieldnum(SalesTable, ReceiptDateConfirmed):
        #                calcAvailableDlvDates = SalesCalcAvailableDlvDates::modifiedField(this,_fieldId);
        #
        #                if (this.ShippingDateConfirmed > this.ReceiptDateConfirmed)
        #                    this.ShippingDateConfirmed = this.ReceiptDateConfirmed;
        #                break;
        #
        #            default:
        #        }
        #    }
        #
        #    if (this.isFormDataSource() && this.dataSource().formRun() && this.dataSource().formRun().name() == formstr(SalesCreateOrder))
        #    {
        #        obj = this.dataSource().formRun();
        #
        #        if (calcAvailableDlvDates && calcAvailableDlvDates.parmCancelModifiedField())
        #        {
        #            if (formHasMethod(obj,identifierstr(getInitialValuesDeliveryDate)))
        #            {
        #                c = obj.getInitialValuesDeliveryDate();
        #
        #                if (c)
        #                {
        #                    this.ShippingDateConfirmed   = conpeek(c, 1);
        #                    this.ShippingDateRequested   = conpeek(c, 2);
        #                    this.ReceiptDateConfirmed    = conpeek(c, 3);
        #                    this.ReceiptDateRequested    = conpeek(c, 4);
        #                    this.DeliveryDateControlType = conpeek(c, 5);
        #                }
        #            }
        #            else
        #            {
        #                this.(_fieldId) = this.orig().(_fieldId);
        #            }
        #        }
        #        else
        #        {
        #            if (formHasMethod(obj,identifierstr(setInitialValuesDeliveryDate)))
        #                obj.setInitialValuesDeliveryDate();
        #        }
        #    }
        #
        #    this.DeliveryDate = this.ShippingDateConfirmed ? this.ShippingDateConfirmed : this.ShippingDateRequested;
        #}
        #
      ENDSOURCE
      SOURCE #modifiedInterCompanyOrder
        #void  modifiedInterCompanyOrder()
        #{
        #    if (this.InterCompanyOrder)
        #        this.InterCompanyCompanyId = this.custTable_CustAccount().interCompanyCompanyId();
        #    else
        #        this.InterCompanyCompanyId = '';
        #}
      ENDSOURCE
      SOURCE #modifiedInventSiteFromParent
        #public void modifiedInventSiteFromParent()
        #{
        #    this.InventStorageDimMap::modifiedInventSiteFromParent(this);
        #}
      ENDSOURCE
      SOURCE #modifiedOneTimeCustomer
        #void  modifiedOneTimeCustomer()
        #{;
        #    if (!CustTable::createOneTimeAccountValidate())
        #    {
        #        this.OneTimeCustomer = NoYes::No;
        #    }
        #
        #    if (this.OneTimeCustomer && !this.CustAccount)
        #    {
        #        this.createOneTimeAccount();
        #    }
        #}
      ENDSOURCE
      SOURCE #modifiedProjId
        #void  modifiedProjId()
        #{
        #    ProjTable   projTable = ProjTable::find(this.ProjId);
        #    CustTable   custTable = CustTable::find(projTable.projInvoice().InvoiceAccount);
        #    ;
        #
        #    this.initFromProjTable(projTable);
        #    this.InvoiceAccount   = custTable.InvoiceAccount ? custTable.InvoiceAccount : custTable.AccountNum;
        #    this.LanguageId       = projTable.projInvoice().LanguageId;
        #
        #}
      ENDSOURCE
      SOURCE #ModuleType
        #ModuleInventPurchSales moduleType()
        #{
        #    return ModuleInventPurchSales::Sales;
        #}
      ENDSOURCE
      SOURCE #MustBeCovPlanned
        #boolean  mustBeCovPlanned()
        #{
        #    SalesTableType  salesTableType;
        #    ;
        #
        #    salesTableType = this.type();
        #    return salesTableType.mustBeCovPlanned();
        #}
      ENDSOURCE
      SOURCE #mustDoCreditLimitAfterUpdate
        #/**
        #    The method returns true if creditlimit must be executed after salesTable.update().
        #**/
        #boolean mustDoCreditLimitAfterUpdate()
        #{
        #
        #    SalesTable this_orig = this.orig();
        #
        #    return (this.InclTax        != this_orig.InclTax ||
        #            this.CustAccount    != this_orig.CustAccount);
        #}
      ENDSOURCE
      SOURCE #numberOfLines
        #public NumberOfRecords numberOfLines()
        #{
        #    return (select count(RecId) from salesLine where salesLine.SalesId == this.SalesId).RecId;
        #}
      ENDSOURCE
      SOURCE #packingSlipTotal
        #public Amount packingSlipTotal()
        #{
        #    SalesTotals_Sales   salesTotals = SalesTotals_Sales::construct(this, SalesUpdate::PackingSlip);
        #    container           displayFields = salesTotals.displayFieldsCurrency(salesTotals.currencyCode());
        #    ;
        #
        #    return conpeek(displayFields, TradeTotals::posTotalAmount());
        #}
      ENDSOURCE
      SOURCE #Payer
        #CustTable payer(boolean  _forUpdate = false)
        #{
        #    return this.custTable_InvoiceAccount(_forUpdate);
        #}
        #
      ENDSOURCE
      SOURCE #paymDayId
        #CustPaymDayId paymDayId()
        #{
        #    CustPaymDayId    paymDayId;
        #    ;
        #
        #    paymDayId = this.custTable_InvoiceAccount().PaymDayId;
        #
        #    if (!paymDayId)
        #        paymDayId = this.payment().PaymDayId;
        #
        #    return paymDayId;
        #}
      ENDSOURCE
      SOURCE #payment
        #PaymTerm payment(boolean _update = false)
        #{
        #    return PaymTerm::find(this.Payment, _update);
        #}
      ENDSOURCE
      SOURCE #paymModeModified
        #void paymModeModified()
        #{
        #    this.PaymModeMap::modifiedPaymMode();
        #}
        #
      ENDSOURCE
      SOURCE #projectedFreightCharge
        #public AmountCur projectedFreightCharge(AmountCur _amt = 0)
        #{
        #    CustParameters      custParameters = CustParameters::find();
        #    AmountCur           amtTotal, amtFreight, amtTax, amtMisc;
        #    SalesTotals_Sales   salesTotals;
        #    ;
        #
        #    if (custParameters.CreditCardEstShippingChargeType == CreditCardEstShippingChargeType::Fixed)
        #    {
        #        amtFreight = custParameters.CreditCardEstShippingChargeValue;
        #    }
        #    else
        #    {
        #        amtTotal = _amt;
        #        if (prmisdefault(_amt) || _amt == 0)
        #        {
        #            salesTotals = SalesTotals_Sales::construct(this, SalesUpdate::All);
        #            amtTotal    = salesTotals.totalAmount();
        #            amtTax      = salesTotals.totalTaxAmount();
        #            amtMisc     = salesTotals.totalMarkup();
        #        }
        #
        #        amtFreight = amtTotal - amtTax - amtMisc;
        #
        #        if (amtFreight > 0)
        #        {
        #            amtFreight = amtFreight * custParameters.CreditCardEstShippingChargeValue / 100;
        #            amtFreight = custParameters.CreditCardEstShippingChargeMax ?
        #                min(custParameters.CreditCardEstShippingChargeMax,amtFreight) :
        #                amtFreight;
        #        }
        #        else
        #        {
        #            amtFreight = 0;
        #        }
        #    }
        #
        #    return amtFreight;
        #}
      ENDSOURCE
      SOURCE #projTable
        #ProjTable projTable(boolean  _forUpdate = false)
        #{
        #    return ProjTable::find(this.ProjId, _forUpdate);
        #}
      ENDSOURCE
      SOURCE #qualityOrderStatusDisplay
        #/// <summary>
        #/// Retrieves and returns the associated qualtiy orders's status.
        #/// </summary>
        #/// <returns>
        #/// Current quality order status.
        #/// </returns>
        #
        #//BP deviation documented
        #display InventTestOrderStatusDisplay qualityOrderStatusDisplay()
        #{
        #    ;
        #    return InventQualityOrderType::newBuffer(this).orderStatusDisplay();
        #}
        #
      ENDSOURCE
      SOURCE #querySalesLine
        #Query querySalesLine(boolean _update = false)
        #{
        #    DictRelation    dictRelation;
        #    DictField       externdictField;
        #    DictField       dictField;
        #    Query           query = new Query();
        #    Counter         c;
        #    ;
        #
        #    query.addDataSource(tablenum(SalesLine));
        #
        #    dictRelation = new DictRelation(tablenum(SalesLine));
        #    dictRelation.loadTableRelation(this.TableId);
        #
        #
        #    if (dictRelation.lines())
        #    {
        #        for (c=1; c <= dictRelation.lines(); c++)
        #        {
        #            externdictField   = new DictField(this.TableId,dictRelation.lineExternTableValue(c));
        #            dictField   = new DictField(tablenum(SalesLine),dictRelation.lineTableValue(c));
        #            query.dataSourceTable(tablenum(SalesLine)).addRange(dictField.id()).value(queryValue(this.(externdictField.id())));
        #        }
        #    }
        #    query.dataSourceTable(tablenum(SalesLine)).update(_update);
        #
        #    return query;
        #}
      ENDSOURCE
      SOURCE #releaseOrderExists
        #boolean releaseOrderExists()
        #{
        #    SalesTableLinks salesTableLinks;
        #    ;
        #    if (this.SalesType != SalesType::Blanket)
        #        return false;
        #
        #    select firstonly salesTableLinks
        #        where salesTableLinks.MainSalesId == this.SalesId;
        #
        #    if (salesTableLinks)
        #        return true;
        #    return false;
        #}
      ENDSOURCE
      SOURCE #returnCreateReplacement
        #/// <summary>
        #/// Checks if a Replacement order can be created for the SalesTable in scope.
        #/// </summary>
        #/// <returns>
        #/// True if no Replacement order exists, otherwise false.
        #/// </returns>
        #public boolean returnCreateReplacement()
        #{
        #    boolean ret = true;
        #    ;
        #
        #    if (this.ReturnReplacementCreated == NoYes::Yes
        #    || (this.InterCompanyOrder && this.InterCompanyDirectDeliveryOrig))
        #    {
        #        ret = false;
        #    }
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #returnItem
        #boolean returnItem()
        #{;
        #    return this.SalesType == SalesType::ReturnItem;
        #}
      ENDSOURCE
      SOURCE #returnJournal
        #public boolean returnJournal()
        #{;
        #    return this.ReturnStatus != ReturnStatusHeader::None ? true : false;
        #}
      ENDSOURCE
      SOURCE #returnReservationAllowedIsSet
        #public boolean returnReservationAllowedIsSet()
        #{
        #    SalesLine returnLine;
        #    boolean   ret;
        #    ;
        #    select firstonly RecId from returnLine where returnLine.SalesId                == this.SalesId &&
        #                                                 returnLine.ReturnAllowReservation == NoYes::Yes;
        #
        #    ret = returnLine.RecId ? true : false;
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #SalesIdBlanket
        #//BP Deviation documented
        #display SalesIdBlanket salesIdBlanket()
        #{
        #    return SalesTableLinks::find(this.SalesId).MainSalesId;
        #}
      ENDSOURCE
      SOURCE #sendReturnOrderElectronically
        #public void sendReturnOrderElectronically(XMLDocPurpose _xmlDocPurpose, AifSendMode _aifSendMode = AifSendMode::Async)
        #{
        #    AxdSendContext          axdSendContext      = AxdSendContext::construct();
        #    AifEntityKey            aifEntityKey        = AifEntityKey::construct();
        #    AifAction               aifAction ;
        #    AifConstraint           aifConstraint       = new AifConstraint();
        #    AifConstraintList       aifConstraintList   = new AifConstraintList();
        #    ;
        #
        #    aifAction = AifAction::find(AifSendService::getDefaultSendAction(classnum(ReturnReturnOrderOutService),AifSendActionType::SendByKey)) ;
        #
        #    aifEntityKey.parmTableId(this.TableId);
        #    aifEntityKey.parmRecId(this.RecId);
        #    aifEntityKey.parmKeyDataMap(SysDictTable::getKeyData(this));
        #
        #    axdSendContext.parmXMLDocPurpose(_xmlDocPurpose);
        #    axdSendContext.parmSecurity(false);
        #
        #    aifConstraint.parmType(AifConstraintType::Customer) ;
        #    aifConstraint.parmId(this.CustAccount) ;
        #    aifConstraintList.addConstraint(aifConstraint) ;
        #
        #    AifSendService::submitDefault(classnum(ReturnReturnOrderOutService),
        #                                    aifEntityKey,
        #                                    aifConstraintList,
        #                                    _aifSendMode,
        #                                    axdSendContext.pack());
        #}
        #
      ENDSOURCE
      SOURCE #setAddress
        #void  setAddress(Address  address)
        #{
        #    if (address.Name)
        #        this.DeliveryName           = address.Name;
        #
        #    this.DeliveryAddress            = address.Address;
        #    this.DeliveryZipCode            = address.ZipCode;
        #    this.DeliveryCountryRegionId    = address.CountryRegionId;
        #    this.DeliveryState              = address.State;
        #    this.DeliveryCounty             = address.County;
        #    this.DeliveryStreet             = address.Street;
        #    this.DeliveryCity               = address.City;
        #    this.Email                      = address.Email;
        #    this.url                        = address.url;
        #    this.AddressRefRecId            = address.RecId;
        #    this.AddressRefTableId          = address.TableId;
        #
        #    this.setListCode();
        #    this.setTaxGroup(TaxSales::custTaxGroup(this.DlvTerm, this.TaxGroup, address));
        #}
      ENDSOURCE
      SOURCE #setEstimate
        #/**
        #    Returns true if the estimated amount is calculated and has changed
        #**/
        #server boolean setEstimate(SalesTotals _salesTotals = null)
        #{
        #    SalesTotals             salesTotals;
        #    SalesUpdate             qtySpec;
        #    CustParameters          custParameters          = CustParameters::find();
        #    TypeOfCreditmaxCheck    typeOfCreditmaxCheck    = custParameters.CreditMaxCheck;
        #    boolean                 hasEstimatedChanged;
        #    AmountMST               estimatedOld;
        #    ;
        #
        #    hasEstimatedChanged = false;
        #    /**
        #        If creditlimitcheck is set to CreditLineCheckType::None, estimated should not be used,
        #        since the calculation causes a performance hit during order entry
        #    **/
        #    if (custParameters.CreditLineCheck != CreditLineCheckType::None)
        #    {
        #
        #        qtySpec = (typeOfCreditmaxCheck == TypeOfCreditmaxCheck::BalanceDelivered ? SalesUpdate::PackingSlip :
        #                   typeOfCreditmaxCheck == TypeOfCreditmaxCheck::BalanceAll       ? SalesUpdate::All         : 0);
        #
        #        if (qtySpec && this.isCreditCheckEligible())
        #        {
        #            estimatedOld        = this.Estimate;
        #
        #            salesTotals         = (_salesTotals == null) ? SalesTotals::construct(this, qtySpec) : _salesTotals;
        #            this.Estimate       = Currency::amountCur2MST(salesTotals.totalAmount(), this.CurrencyCode);
        #
        #            hasEstimatedChanged = (this.Estimate != estimatedOld);
        #        }
        #    }
        #
        #    this.Touched = NoYes::No;
        #
        #    return hasEstimatedChanged;
        #}
        #
      ENDSOURCE
      SOURCE #setInventSiteId
        #public void setInventSiteId(InventSiteId _inventSiteId)
        #{;
        #    if (this.inventSiteActive())
        #    {
        #        this.InventSiteId = _inventSiteId;
        #        this.modifiedInventSiteFromParent();
        #    }
        #}
      ENDSOURCE
      SOURCE #SetListCode
        #void setListCode()
        #{
        #    this.Listcode = EUSalesList::resolveListCode(this.DeliveryCountryRegionId, this.payer().CountryRegionId);
        #}
      ENDSOURCE
      SOURCE #setNameUsingVATNum
        #private void setNameUsingVATNum(VATNum                   _vatNum,
        #                                AddressCountryRegionId   _countryRegionId,
        #                                Name                     _name,
        #                                CustParameters           _custParameters = CustParameters::find())
        #{
        #    TaxVATNumTable      taxVATNumTable;
        #    CountryRegionType   countryRegionType;
        #    ;
        #
        #    taxVATNumTable = TaxVATNumTable::find(_vatNum, _countryRegionId);
        #
        #    if(taxVATNumTable.Name)
        #    {
        #        this.SalesName      = taxVATNumTable.Name;
        #    }
        #    else
        #    {
        #        switch(_custParameters.MandatoryInvoiceVATNum)
        #        {
        #            case TaxVATNumCountryRegionType::None:
        #                this.SalesName = _name;
        #                break;
        #            case TaxVATNumCountryRegionType::DomesticEU:
        #                countryRegionType = AddressCountryRegion::find(_countryRegionId).Type;
        #                switch(countryRegionType)
        #                {
        #                    case CountryRegionType::Domestic:
        #                    case CountryRegionType::EU:
        #                        this.SalesName = '';
        #                        break;
        #                    default:
        #                        this.SalesName = _name;
        #                        break;
        #                }
        #                break;
        #            case TaxVATNumCountryRegionType::EU:
        #                countryRegionType = AddressCountryRegion::find(_countryRegionId).Type;
        #                switch(countryRegionType)
        #                {
        #                    case CountryRegionType::EU:
        #                        this.SalesName = '';
        #                        break;
        #                    default:
        #                        this.SalesName = _name;
        #                        break;
        #                }
        #                break;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #setReturnAddressFromInventLocationId
        #boolean setReturnAddressFromInventLocationId(InventLocationId _inventLocationId)
        #{
        #    Address         inventLocationAddress;
        #    InventLocation  inventLocation;
        #    boolean         addressSet;
        #    ;
        #
        #    addressSet = false;
        #
        #    if (_inventLocationId)
        #    {
        #        inventLocation          = InventLocation::find(_inventLocationId);
        #        inventLocationAddress   = Address::find(tablenum(InventLocation), inventLocation.RecId, AddressType::Delivery);
        #
        #        if (inventLocationAddress)
        #        {
        #            this.setAddress(inventLocationAddress);
        #            addressSet = true;
        #        }
        #    }
        #
        #    if (!addressSet)
        #    {
        #        addressSet = this.setReturnAddressFromInventSiteId(this.InventSiteId);
        #    }
        #
        #    return addressSet;
        #}
        #
        #
      ENDSOURCE
      SOURCE #setReturnAddressFromInventSiteId
        #boolean setReturnAddressFromInventSiteId(InventSiteId _inventSiteId)
        #{
        #    Address         address;
        #    InventSite      inventSite;
        #    boolean         addressSet = false;
        #    ;
        #
        #    if (_inventSiteId &&  this.inventSiteActive())
        #    {
        #        inventSite  = InventSite::find(_inventSiteId);
        #        address     = Address::find(tablenum(InventSite), inventSite.RecId, AddressType::Delivery);
        #
        #        if (address.RecId)
        #        {
        #            this.setAddress(address);
        #            addressSet = true;
        #        }
        #    }
        #
        #    if (!addressSet)
        #    {
        #        this.initDefaultReturnAddress();
        #        addressSet = true;
        #    }
        #
        #    return addressSet;
        #}
        #
        #
      ENDSOURCE
      SOURCE #setShipCarrierInformation
        #void setShipCarrierInformation(SalesTable           _salesTable,
        #                               CustPackingSlipJour  _custPackingSlipJour = null,
        #                               CustInvoiceJour      _custInvoiceJour = null)
        #{
        #    DlvMode     dlvMode;
        #    DlvModeId   dlvModeId;
        #    ;
        #
        #    if (_custPackingSlipJour)
        #    {
        #        dlvModeId   = _custPackingSlipJour.DlvMode;
        #    }
        #    else if (_custInvoiceJour)
        #    {
        #        dlvModeId   = _custInvoiceJour.DlvMode;
        #    }
        #    else
        #    {
        #        dlvModeId = _salesTable.DlvMode;
        #    }
        #
        #    dlvMode = DlvMode::find(dlvModeId);
        #
        #    this.ShipCarrierId              = dlvMode.ShipCarrierId;
        #    this.ShipCarrierAccountCode     = dlvMode.ShipCarrierAccountCode;
        #    this.ShipCarrierDlvType         = dlvMode.ShipCarrierDlvType;
        #
        #    if (_salesTable)
        #    {
        #        this.ShipCarrierAccount         = _salesTable.ShipCarrierAccount;
        #        this.ShipCarrierDeliveryContact = _salesTable.ShipCarrierDeliveryContact;
        #        this.ShipCarrierFuelSurcharge   = _salesTable.ShipCarrierFuelSurcharge;
        #        this.ShipCarrierBlindShipment   = _salesTable.ShipCarrierBlindShipment;
        #        this.ShipCarrierResidential     = _salesTable.ShipCarrierResidential;
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #setTaxGroup
        #void setTaxGroup(TaxGroup _taxGroup)
        #{
        #    SalesTableType salesTableType;
        #    ;
        #    salesTableType = this.type();
        #    salesTableType.setTaxGroup(_taxGroup);
        #}
      ENDSOURCE
      SOURCE #settleExchRate
        #CustExchRate settleExchRate(boolean throwOnError = false)
        #{
        #    QueryRun        queryRun;
        #    CustTransOpen   custTransOpen;
        #    CustTrans       custTrans;
        #    CustExchRate    exchRate = 0;
        #    CustExchRate    custExchRate;
        #    ;
        #    if (this.SettleVoucher == SettlementType::SelectedTransact && SalesParameters::find().UseSettleExchRate)
        #    {
        #        queryRun = SpecTrans::createQueryRunToRefTable(this.company(), this.TableId, this.RecId, tablenum(CustTransOpen));
        #
        #        queryRun.allowCrossCompany(true);
        #
        #        while (queryRun.next())
        #        {
        #            if (queryRun.changed(tablenum(CustTransOpen)))
        #            {
        #                custTransOpen = queryRun.get(tablenum(CustTransOpen));
        #                if (custTransOpen)
        #                {
        #                    custTrans = custTransOpen.custTrans();
        #                    custExchRate = round(custTrans.AmountMST * 100 / custTrans.AmountCur, 0.01);
        #                    if (!exchRate)
        #                        exchRate = custExchRate;
        #                    else
        #                        if (exchRate != custExchRate)
        #                        {
        #                            exchRate = 0;
        #                            if (throwOnError)
        #                                throw error("@SYS59594");
        #
        #                            checkFailed("@SYS59594");
        #                            break;
        #                        }
        #                }
        #            }
        #        }
        #    }
        #    return exchRate;
        #}
      ENDSOURCE
      SOURCE #shipCarrierThirdPartyName
        #Name shipCarrierThirdPartyName()
        #{
        #    return Address::find(this.TableId, this.RecId, AddressType::ShipCarrierThirdPartyShipping).Name;
        #}
        #
      ENDSOURCE
      SOURCE #showContactPerson
        #//BP Deviation documented
        #display ContactPersonName showContactPerson()
        #{;
        #    return ContactPerson::find(this.ContactPersonId).Name;
        #}
      ENDSOURCE
      SOURCE #showDocHanIcon
        #// AOSRunMode::Called
        #//BP Deviation documented
        #display smmDocIconNum showDocHanIcon()
        #{
        #    #macrolib.resource
        #
        #    if ((select docuRef
        #           where docuRef.RefCompanyId == this.DataAreaId &&
        #                 docuRef.RefTableId   == this.TableId &&
        #                 docuRef.RefRecId     == this.RecId).RecId)
        #    {
        #        return #RES_NODE_DOC;
        #    }
        #
        #    return #RES_AM_NEW;
        #}
      ENDSOURCE
      SOURCE #smmAmountDeliveredMST
        #//BP Deviation documented
        #server display AmountMST smmAmountDeliveredMST()
        #{
        #    return this.amountMST(this.amountDelivered());
        #}
      ENDSOURCE
      SOURCE #smmAmountInvoicedMST
        #//BP Deviation documented
        #server display AmountMST smmAmountInvoicedMST()
        #{
        #    return this.amountMST(this.amountInvoiced());
        #}
      ENDSOURCE
      SOURCE #smmAmountOrderedNotInvoicedMST
        #//BP Deviation documented
        #server display AmountMST smmAmountOrderedNotInvoicedMST()
        #{
        #    return this.amountMST(this.amountOrderedNotInvoiced());
        #}
      ENDSOURCE
      SOURCE #taxModuleType
        #TaxModuleType taxModuleType()
        #{
        #    return TaxModuleType::Sales;
        #}
      ENDSOURCE
      SOURCE #timeZoneSite
        #//BP Deviation documented
        #display Timezone timeZoneSite()
        #{
        #    return InventSite::timeZoneSite(this.InventSiteId);
        #}
      ENDSOURCE
      SOURCE #tpAddress
        #Addressing tpAddress()
        #{
        #    return Address::find(this.TableId, this.RecId, AddressType::ShipCarrierThirdPartyShipping).Address;
        #}
      ENDSOURCE
      SOURCE #TransferCustAccount
        #client server void  transferCustAccount()
        #{
        #    boolean initFromCustTable = false;
        #    ;
        #    if (this.CustAccount)
        #    {
        #        if (SalesParameters::find().PromptTransfer)
        #        {
        #            if (Box::yesNo("@SYS418"+'\n\n'+CustTable::promptAddress(this.CustAccount, AddressType::Delivery),DialogButton::Yes)==DialogButton::Yes)
        #            {
        #                initFromCustTable = true;
        #            }
        #            else
        #            {
        #                initFromCustTable = false;
        #            }
        #        }
        #        else
        #        {
        #            initFromCustTable = true;
        #        }
        #
        #        this.transferCustAccount_Server(initFromCustTable);
        #    }
        #}
      ENDSOURCE
      SOURCE #transferCustAccount_Server
        #server void  transferCustAccount_Server(boolean _initFromCustTable)
        #{
        #    if (_initFromCustTable)
        #    {
        #        this.initFromCustTable();
        #        if (this.CustAccount != this.InvoiceAccount)
        #            this.transferInvoiceAccount();
        #    }
        #    else
        #    {
        #        this.initFromCustTableMandatoryFields();
        #    }
        #    this.copyThirdPartyAddressFromCust();
        #    SalesCalcAvailableDlvDates::initDateFieldsOrderEntryDeadline(this);
        #}
      ENDSOURCE
      SOURCE #TransferInvoiceAccount
        #void  transferInvoiceAccount()
        #{
        #    if (SalesParameters::find().PromptTransfer)
        #    {
        #        if (Box::yesNo("@SYS19435"+'\n\n'+this.InvoiceAccount+'\n\n'+CustTable::promptAddress(this.InvoiceAccount, AddressType::Delivery),DialogButton::Yes)==DialogButton::Yes)
        #            this.initInvoiceAccount();
        #    }
        #    else
        #        this.initInvoiceAccount();
        #}
      ENDSOURCE
      SOURCE #TransferToOnetimeCustomer
        #server void transferToOnetimeCustomer()
        #{
        #    CustTable custTable;
        #
        #    if (this.OneTimeCustomer)
        #    {
        #        ttsbegin;
        #        custTable                   = this.custTable_CustAccount(true);
        #        custTable.Address           = this.DeliveryAddress;
        #        custTable.Name              = this.DeliveryName;
        #        custTable.ZipCode           = this.DeliveryZipCode;
        #        custTable.CountryRegionId   = this.DeliveryCountryRegionId;
        #        custTable.County            = this.DeliveryCounty;
        #        custTable.State             = this.DeliveryState;
        #        custTable.Street            = this.DeliveryStreet;
        #        custTable.City              = this.DeliveryCity;
        #        custTable.update();
        #        ttscommit;
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #Type
        #SalesTableType type()
        #{
        #    return SalesTableType::construct(this);
        #}
      ENDSOURCE
      SOURCE #Update
        #public void  update()
        #{
        #    SalesTableType salesTableType;
        #    boolean calcEstimateAfterUpdate;
        #    ;
        #
        #    ttsbegin;
        #
        #    salesTableType = this.type();
        #
        #    this.Touched = NoYes::No;
        #
        #    calcEstimateAfterUpdate = this.mustDoCreditLimitAfterUpdate();
        #
        #    salesTableType.update();
        #
        #    if (calcEstimateAfterUpdate)
        #    {
        #        if (this.setEstimate())
        #        {
        #            this.doUpdate();
        #        }
        #
        #        if (CustParameters::find().salesCheckCreditOnHeader())
        #        {
        #            this.checkAgainstCreditLimit();
        #        }
        #    }
        #
        #    // Update the CRM transaction log
        #    smmTransLog::initTrans(this, smmLogAction::update);
        #
        #    ttscommit;
        #}
        #
      ENDSOURCE
      SOURCE #UpdateBackStatus
        #void  updateBackStatus()
        #{
        #    SalesTableType  salesTableType;
        #    ;
        #
        #    salesTableType = this.type();
        #    salesTableType.updateBackStatus();
        #}
      ENDSOURCE
      SOURCE #updateDeadline
        #void  updateDeadline(SalesDeadline  deadline)
        #{
        #    SalesTableType  salesTableType;
        #    ;
        #
        #    salesTableType = this.type();
        #    salesTableType.updateDeadline(deadline);
        #}
      ENDSOURCE
      SOURCE #updateDeadlineOnLine
        #void updateDeadlineOnLine()
        #{
        #    SalesLine   salesLine;
        #    ;
        #
        #    ttsbegin;
        #
        #    update_recordset salesLine
        #        setting ReturnDeadLine = this.ReturnDeadline
        #        where   salesLine.SalesId == this.SalesId;
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #updateDocumentStatus
        #void  updateDocumentStatus(DocumentStatus  documentStatus)
        #{
        #    SalesTableType  salesTableType;
        #    ;
        #
        #    salesTableType = this.type();
        #    salesTableType.updateDocumentStatus(documentStatus);
        #}
      ENDSOURCE
      SOURCE #UpdateFinalDisc
        #server void  updateFinalDisc()
        #{
        #    SalesLine salesLine;
        #    ;
        #
        #    this.PriceDiscHeading::updateFinalDisc(salesLine);
        #
        #     //This will trigger the creditlimit calculation when salesTable.validateWrite is called
        #    this.Touched = NoYes::Yes;
        #}
        #
      ENDSOURCE
      SOURCE #UpdateLedgerCov
        #public void  updateLedgerCov()
        #{
        #    SalesTableType salesTableType;
        #    ;
        #
        #    salesTableType = this.type();
        #    salesTableType.updateLedgerCov();
        #}
      ENDSOURCE
      SOURCE #UpdateMultiLineDisc
        #server void  updateMultiLineDisc()
        #{
        #    SalesLine salesLine;
        #    ;
        #
        #    this.PriceDiscHeading::updateMultiLineDisc(salesLine);
        #
        #    //This will trigger the creditlimit calculation when salesTable.validateWrite is called
        #    this.Touched = NoYes::Yes;
        #}
        #
      ENDSOURCE
      SOURCE #updateSalesType
        #void  updateSalesType()
        #{
        #    SalesTableType  salesTableType;
        #    ;
        #
        #    salesTableType = this.type();
        #    salesTableType.updateSalesType();
        #}
      ENDSOURCE
      SOURCE #ValidateDelete
        #boolean  validateDelete()
        #{
        #    boolean            ok = true;
        #    SalesTableType     salesTableType;
        #    ;
        #
        #    ok = super();
        #
        #    if (ok)
        #    {
        #        salesTableType = this.type();
        #        ok = salesTableType.validateDelete();
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #validateField
        #boolean validateField(fieldId  fieldId)
        #{
        #    boolean            ok = true;
        #    SalesTableType     salesTableType;
        #    ;
        #
        #    if(!this.AddressMap::validatePostalCode(fieldId))
        #    {
        #        return false;
        #    }
        #
        #    ok = super(fieldId);
        #
        #    if (ok)
        #    {
        #        salesTableType = this.type();
        #        ok = salesTableType.validateField(fieldId);
        #    }
        #
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #validateWrite
        #public boolean  validateWrite()
        #{
        #    boolean            ok = true;
        #    ;
        #
        #
        #    ok = super();
        #    ok = ok && this.validateWrite_server();
        #
        #    return ok;
        #
        #}
        #
      ENDSOURCE
      SOURCE #validateWrite_server
        #server public boolean  validateWrite_server()
        #{
        #    boolean            ok = true;
        #    SalesTableType     salesTableType;
        #    boolean             isThirdParty = DlvTerm::find(this.DlvTerm).ShipCarrierFreightApplied == ShipCarrierFreightApplied::ThirdParty ;
        #    Addressing          tpAddress = this.tpAddress();
        #    Name                tpName      = this.shipCarrierThirdPartyName();
        #    ;
        #
        #    if (ok && !this.SalesId)
        #        ok = checkFailed(strfmt("@SYS26332", fieldid2pname(tablenum(SalesTable), fieldnum(SalesTable, SalesId))));
        #
        #    salesTableType = this.type();
        #
        #    if (ok && this.Touched)
        #    {
        #        ok = SalesTableType::checkAgainstCreditLimit(this);
        #    }
        #
        #    if (ok)
        #    {
        #        setprefix(strfmt("@SYS25975", this.SalesId));
        #        ok = salesTableType.validateWrite();
        #    }
        #
        #    if (ok)
        #    {
        #        ok = appl.dimensionSetValidation().checkDimension(this, fieldnum(SalesTable, Dimension), true);
        #    }
        #
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #ChangeReturnStatus
        #public static Counter changeReturnStatus(FormDataSource _datasource, ReturnUpdateAction _updateAction)
        #{
        #    SalesTable      returnTable;
        #    SalesLine       returnLine;
        #    SalesTable      returnTableUpdate;
        #    Counter         numberOfRecords;
        #    SalesTable      salesTable;
        #    PurchTable      purchTable;
        #    PurchLine       purchLine;
        #    ;
        #
        #    ttsbegin;
        #
        #    for (returnTable = _datasource.getFirst(true) ? _datasource.getFirst(true) : _datasource.cursor(); returnTable; returnTable = _datasource.getNext())
        #    {
        #        if (returnTable.ReturnStatus == ReturnStatusHeader::Created && !returnTable.existRegisteredReceivedInvoicedLines() && !returnTable.type().interCompanyIsDerivedOrder())
        #        {
        #            if (_updateAction == ReturnUpdateAction::Cancel)
        #            {
        #                while select forupdate returnLine
        #                      where returnLine.SalesId == returnTable.SalesId
        #                      &&    returnLine.InventTransId
        #                {
        #                    if (returnLine.interCompanySalesLineExist())
        #                    {
        #                        purchLine            = PurchLine::findInventTransId(returnLine.InventRefTransId,true);
        #                        purchTable           = PurchTable::find(purchLine.PurchId);
        #
        #                        purchLine.SkipUpdate = InterCompanySkipUpdate::Internal;
        #                        purchLine.delete(false);
        #
        #                        if (!purchTable.existPurchLine())
        #                        {
        #                            if (purchTable.InterCompanyCompanyId
        #                            &&  purchTable.InterCompanySalesId)
        #                            {
        #                                changecompany(purchTable.InterCompanyCompanyId)
        #                                {
        #                                    salesTable = null;
        #                                    salesTable = SalesTable::find(purchTable.InterCompanySalesId,true);
        #                                    if (salesTable)
        #                                        salesTable.delete();
        #                                }
        #                            }
        #                        }
        #                    }
        #
        #                    returnLine.SalesQty     = 0;
        #                    returnLine.salesQtyModified();
        #                    returnLine.DeliveryType = TradeLineDlvType::None;
        #                    returnLine.SkipUpdate   = InterCompanySkipUpdate::Internal;
        #                    returnLine.update();
        #                }
        #
        #                returnLine.skipDataMethods(true);
        #                update_recordset returnLine
        #                setting          ReturnStatus         = ReturnStatusLine::Canceled,
        #                                 CostPrice            = 0,
        #                                 InventTransIdReturn  = '',
        #                                 SalesStatus          = SalesStatus::Canceled,
        #                                 ReturnClosedDate     = systemdateget()
        #                where returnLine.SalesId == returnTable.SalesId;
        #
        #                returnTableUpdate = SalesTable::find(returnTable.SalesId, true);
        #                returnTableUpdate.ReturnStatus               = ReturnStatusHeader::Canceled;
        #                returnTableUpdate.SalesStatus                = SalesStatus::Canceled;
        #                returnTableUpdate.InterCompanyDirectDelivery = false;
        #                returnTableUpdate.update();
        #            }
        #
        #            numberOfRecords++;
        #        }
        #    }
        #
        #    ttscommit;
        #
        #    return numberOfRecords;
        #}
      ENDSOURCE
      SOURCE #checkExist
        #static boolean checkExist(SalesId  salesId)
        #{
        #    if (salesId && !SalesTable::exist(salesId))
        #        return checkFailed(strfmt(SalesTable::txtNotExist(),salesId));
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #createSalesTable_Replacement
        #/// <summary>
        #/// Creates a sales order for return order replacement.
        #/// </summary>
        #/// <param name="_custAccount">
        #/// Customer account taken from return order.
        #/// </param>
        #/// <param name="_currencyCode">
        #/// Currency code taken from return order.
        #/// </param>
        #/// <param name="_returnItemNum">
        #/// RMA number to mark sales order as rreplacement order
        #/// </param>
        #/// <returns>
        #/// Sales order record created.
        #/// </returns>
        #static server SalesTable createSalesTable_Replacement(CustAccount _custAccount, CustCurrencyCode _currencyCode, SalesReturnItemNum _returnItemNum)
        #{
        #    SalesTable      salesTable;
        #    AxSalesTable    axSalesTable;
        #    ;
        #
        #    ttsbegin;
        #
        #    axSalesTable = new AxSalesTable();
        #    axSalesTable.parmCustAccount(_custAccount);
        #    axSalesTable.parmCurrencyCode(_currencyCode);
        #    axSalesTable.parmSalesType(SalesType::Sales);
        #    axSalesTable.parmReturnItemNum(_returnItemNum);
        #    axSalesTable.save();
        #
        #    ttscommit;
        #
        #    salesTable = axSalesTable.salesTable();
        #
        #    return salesTable;
        #}
        #
      ENDSOURCE
      SOURCE #custOpenOrders
        #static SalesTable  custOpenOrders(CustAccount  custAccount, boolean  _forUpdate = false)
        #{
        #    SalesTable salesTable;
        #    ;
        #
        #    salesTable.selectForUpdate(_forUpdate);
        #
        #    select salesTable
        #           index hint CustIdx
        #           where salesTable.CustAccount  == custAccount                &&
        #                 (salesTable.SalesStatus == SalesStatus::None      ||
        #                  salesTable.SalesStatus == SalesStatus::Backorder ||
        #                  salesTable.SalesStatus == SalesStatus::Delivered);
        #
        #    return salesTable;
        #}
      ENDSOURCE
      SOURCE #deleteAllLines
        #public static void deleteAllLines(SalesId _salesId)
        #{
        #    SalesLine   salesLine;
        #    ;
        #
        #    ttsbegin;
        #
        #    delete_from salesLine where salesLine.SalesId == _salesId;
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #exist
        #static boolean exist(SalesId  salesId)
        #{
        #    if (!salesId)
        #        return false;
        #
        #    return (select firstonly RecId from salesTable
        #                index hint SalesIdx
        #                where salesTable.SalesId == salesId).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existCustOpenOrder
        #static boolean existCustOpenOrder(CustAccount custAccount)
        #{
        #    SalesTable salesTable;
        #    ;
        #
        #    return (select firstonly RecId from salesTable
        #                index hint CustIdx
        #                where salesTable.CustAccount  == custAccount                &&
        #                      (salesTable.SalesStatus == SalesStatus::None      ||
        #                       salesTable.SalesStatus == SalesStatus::Backorder ||
        #                       salesTable.SalesStatus == SalesStatus::Delivered)).RecId != 0;
        #
        #}
      ENDSOURCE
      SOURCE #existDlvModeNotInvoiced
        #/// <summary>
        #/// Checks if the delivery mode is used on a non-invoiced sales order.
        #/// </summary>
        #/// <param name="_dlvModeId">
        #/// The <c>DlvModeId</c> value that specifies the delivery mode record.
        #/// </param>
        #/// <returns>
        #/// true if the deliver mode is used on a non-invoiced sales order; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// The check is made against the sales order header and all of its non-invoiced lines.
        #/// </remarks>
        #public static server boolean existDlvModeNotInvoiced(DlvModeId _dlvModeId)
        #{
        #    boolean         isReferenced;
        #    SalesTable      salesTable;
        #    SalesLine       salesLine;
        #    ;
        #
        #    if (_dlvModeId == '')
        #    {
        #        return false;
        #    }
        #
        #    select firstonly
        #        RecId from salesTable
        #    where
        #        ((salesTable.SalesStatus != SalesStatus::Invoiced) && (salesTable.SalesStatus != SalesStatus::Canceled)) &&
        #        salesTable.DlvMode == _dlvModeId;
        #
        #    isReferenced = (salesTable.RecId != 0);
        #    if (!isReferenced)
        #    {
        #        select firstonly
        #            RecId from salesLine
        #        where
        #            ((salesLine.SalesStatus != SalesStatus::Invoiced) && (salesLine.SalesStatus != SalesStatus::Canceled)) &&
        #            salesLine.DlvMode == _dlvModeId;
        #
        #        isReferenced = (salesLine.RecId != 0);
        #    }
        #
        #    return isReferenced;
        #}
        #
      ENDSOURCE
      SOURCE #existsRegQrRecInvLines
        #public static boolean existsRegQrRecInvLines(SalesId _salesId)
        #{;
        #    return (select firstonly salesLine where salesLine.SalesId == _salesId &&
        #                                salesLine.ReturnStatus > ReturnStatusLine::Awaiting &&
        #                                salesLine.ReturnStatus < ReturnStatusLine::Canceled).RecId ? true : false;
        #}
      ENDSOURCE
      SOURCE #find
        #static SalesTable find(SalesId          salesId,
        #                       boolean          _forUpdate = false,
        #                       ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
        #{
        #    SalesTable  salesTable;
        #    ;
        #
        #    if (salesId)
        #    {
        #        if (_forUpdate)
        #        {
        #            salesTable.selectForUpdate (_forUpdate);
        #            if (_concurrencyModel != ConcurrencyModel::Auto)
        #                salesTable.concurrencyModel(_concurrencyModel);
        #        }
        #        salesTable.selectLocked    (_forUpdate);
        #
        #        select firstonly salesTable
        #            index hint SalesIdx
        #            where salesTable.SalesId == salesId;
        #    }
        #
        #    return salesTable;
        #}
      ENDSOURCE
      SOURCE #findOrCreateSalesTable_ItemReq
        #static server SalesTable findOrCreateSalesTable_ItemReq(CustAccount _custAccount, CustCurrencyCode _currencyCode, ProjId _projId)
        #{
        #    SalesTable      salesTable;
        #    AxSalesTable    axSalesTable;
        #    CustTable       custTable;
        #    ;
        #
        #    if (_projId)
        #    {
        #        ttsbegin;
        #
        #        select firstonly forupdate salesTable
        #            where salesTable.ProjId         == ''                   &&
        #                  salesTable.CustAccount    == _custAccount         &&
        #                  salesTable.CurrencyCode   == _currencyCode        &&
        #                  salesTable.SalesType      == SalesType::ItemReq;
        #
        #        if (salesTable.RecId && !salesTable.numberOfLines())
        #        {
        #            axSalesTable = salesTable.axSalesTable();
        #            axSalesTable.parmProjId(_projId);
        #            custTable   = CustTable::find(ProjTable::find(_projId).projInvoice().InvoiceAccount);
        #            axSalesTable.parmInvoiceAccount(custTable.InvoiceAccount ? custTable.InvoiceAccount : custTable.AccountNum);
        #            axSalesTable.save();
        #            salesTable = axSalesTable.salesTable();
        #        }
        #
        #        ttscommit;
        #    }
        #
        #    select firstonly salesTable
        #        where salesTable.ProjId         == _projId              &&
        #              salesTable.CustAccount    == _custAccount         &&
        #              salesTable.CurrencyCode   == _currencyCode        &&
        #              salesTable.SalesType      == SalesType::ItemReq;
        #
        #    if (!salesTable.RecId)
        #    {
        #        ttsbegin;
        #
        #        axSalesTable = new AxSalesTable();
        #        axSalesTable.parmCustAccount(_custAccount);
        #        axSalesTable.parmProjId(_projId);
        #        axSalesTable.parmCurrencyCode(_currencyCode);
        #        axSalesTable.parmSalesType(SalesType::ItemReq);
        #        axSalesTable.save();
        #
        #        ttscommit;
        #
        #        salesTable = axSalesTable.salesTable();
        #    }
        #
        #    return salesTable;
        #}
        #
      ENDSOURCE
      SOURCE #findRecId
        #static SalesTable findRecId(recId       recId,
        #                            boolean     _forUpdate = false )
        #{
        #    SalesTable salesTable;
        #    ;
        #
        #    salesTable.selectForUpdate(_forUpdate);
        #
        #    select salesTable
        #        where salesTable.RecId == recId;
        #
        #    return salesTable;
        #}
      ENDSOURCE
      SOURCE #findReturnItemNum
        #static SalesTable findReturnItemNum(SalesReturnItemNum _returnItemNum, boolean _forupdate = false, ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
        #{
        #    SalesTable  salesTable;
        #    ;
        #
        #    if (_returnItemNum)
        #    {
        #        if (_forupdate)
        #        {
        #            salesTable.selectForUpdate(_forupdate);
        #            if (_concurrencyModel != ConcurrencyModel::Auto)
        #            {
        #                salesTable.concurrencyModel(_concurrencyModel);
        #            }
        #        }
        #
        #        salesTable.selectLocked(_forupdate);
        #
        #        select firstonly salesTable  where salesTable.ReturnItemNum == _returnItemNum &&
        #                                           salesTable.ReturnStatus  != ReturnStatusHeader::None;
        #    }
        #
        #    return salesTable;
        #}
        #
        #
        #
        #
      ENDSOURCE
      SOURCE #jumpRefSalesIdBlanket
        #static void jumpRefSalesIdBlanket(SalesIdBlanket _salesIdBlanket)
        #{
        #    SalesTableLinks salesTableLinks;
        #    Args            args;
        #    FormRun         formRun;
        #    ;
        #    salesTableLinks = SalesTableLinks::subSalesTableLink(_salesIdBlanket);
        #
        #    args = new Args(formstr(SalesTable));
        #    args.record(salesTableLinks);
        #    formRun = classfactory.formRunClass(args);
        #    formRun.init();
        #    formRun.run();
        #    formRun.detach();
        #}
      ENDSOURCE
      SOURCE #lookupDeliveryAccount
        #client static void  lookupDeliveryAccount(FormStringControl     ctrl,
        #                                          CustInvoiceAccount    invoiceAccount)
        #{
        #    Args        args;
        #    Object      formRun;
        #    ;
        #
        #    args = new Args();
        #    args.name(formstr(SalesDeliveryAccountLookup));
        #
        #    formRun = classfactory.formRunClass(args);
        #    formRun.invoiceAccount(invoiceAccount);
        #    formRun.init();
        #
        #    ctrl.performFormLookup(formRun);
        #}
      ENDSOURCE
      SOURCE #lookupWMSReception
        #static void lookupWMSReception(FormStringControl ctrl, CustAccount custAccount)
        #{
        #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tablenum(SalesTable), ctrl);
        #    Query                   query = new Query();
        #    QueryBuildDataSource    queryBuildDataSource;
        #    QueryBuildRange         queryBuildRange;
        #    ;
        #    sysTableLookup.addLookupfield(fieldnum(SalesTable, SalesId));
        #    sysTableLookup.addLookupfield(fieldnum(SalesTable, SalesName));
        #    sysTableLookup.addLookupfield(fieldnum(SalesTable, CustAccount));
        #
        #    queryBuildDataSource = query.addDataSource(tablenum(SalesTable));
        #
        #    if (custAccount)
        #    {
        #        queryBuildRange = queryBuildDataSource.addRange(fieldnum(SalesTable, CustAccount));
        #        queryBuildRange.value(queryValue(custAccount));
        #    }
        #    queryBuildRange = queryBuildDataSource.addRange(fieldnum(SalesTable, SalesStatus));
        #    queryBuildRange.value(enum2Value(SalesStatus::Backorder));
        #
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
      ENDSOURCE
      SOURCE #lookupWMSReceptionRMA
        #/// <summary>
        #/// Provides filtere look up functionallity to the the ReturnItemNum field.
        #/// </summary>
        #/// <param name="ctrl">
        #/// The form string object.
        #/// </param>
        #/// <param name="_custAccount">
        #/// A CustTable table buffer.
        #/// </param>
        #/// <remarks>
        #/// Look up Return orders.
        #/// </remarks>
        #static void lookupWMSReceptionRMA(FormStringControl ctrl, CustAccount _custAccount = '')
        #{
        #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tablenum(SalesTable), ctrl);
        #    Query                   query = new Query();
        #    QueryBuildDataSource    queryBuildDataSource;
        #    QueryBuildRange         queryBuildRange;
        #    ;
        #
        #    sysTableLookup.addLookupfield(fieldnum(SalesTable, ReturnItemNum));
        #    sysTableLookup.addLookupfield(fieldnum(SalesTable, SalesId));
        #    sysTableLookup.addLookupfield(fieldnum(SalesTable, SalesName));
        #    sysTableLookup.addLookupfield(fieldnum(SalesTable, CustAccount));
        #
        #    queryBuildDataSource = query.addDataSource(tablenum(SalesTable));
        #
        #    queryBuildRange = queryBuildDataSource.addRange(fieldnum(SalesTable, ReturnStatus));
        #    queryBuildRange.value(strfmt("%1, %2", SysQuery::value(ReturnStatusHeader::Created), SysQuery::value(ReturnStatusHeader::Open)));
        #
        #    if (_custAccount)
        #    {
        #        queryBuildRange = queryBuildDataSource.addRange(fieldnum(SalesTable, CustAccount));
        #        queryBuildRange.value(SysQuery::value(_custAccount));
        #    }
        #
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
      ENDSOURCE
      SOURCE #promptConvertCurrencyCode
        #client static container promptConvertCurrencyCode()
        #{
        #    Dialog                  dialog;
        #    DialogField             dialogField;
        #    DialogButton            dialogButton;
        #    ;
        #    if (!isConfigurationkeyEnabled(configurationkeynum(PriceDisc)))
        #    {
        #        dialogButton = Box::okCancel("@SYS54755", DialogButton::Ok);
        #        if (dialogButton == DialogButton::Ok)
        #            return [NoYes::Yes, TradeCurencyConversion::ExchRate];
        #
        #        return [NoYes::No, TradeCurencyConversion::ExchRate];
        #    }
        #
        #    dialog = new Dialog("@SYS54755");
        #    dialog.addText("@SYS54755");
        #    dialogField = dialog.addField(typeid(TradeCurencyConversion));
        #    if (dialog.run())
        #        return [NoYes::Yes, dialogField.value()];
        #
        #    return [NoYes::No, TradeCurencyConversion::ExchRate];
        #}
      ENDSOURCE
      SOURCE #promptCopyDeliveryAddress
        #client static DialogButton  promptCopyDeliveryAddress()
        #{;
        #    return Box::yesYesAllNoCancel("@SYS78472", DialogButton::Yes);
        #}
      ENDSOURCE
      SOURCE #promptCopyThirdPartyBillingAddress
        #client static DialogButton  promptCopyThirdPartyBillingAddress()
        #{
        #    ;
        #    return Box::yesNo("@SYS119160", DialogButton::Yes);
        #}
      ENDSOURCE
      SOURCE #returnUpdatedHeaderStatus
        #static void returnUpdatedHeaderStatus(SalesId _salesId, DocumentStatus _documentStatus = DocumentStatus::None)
        #{
        #    SalesLine salesLine;
        #    SalesTable salesTable;
        #    ;
        #
        #    switch (_documentStatus)
        #    {
        #        case DocumentStatus::PackingSlip :
        #            select firstonly RecId from salesLine where salesLine.SalesId       == _salesId &&
        #                                                (salesLine.ReturnStatus == ReturnStatusLine::Received   ||
        #                                                 salesLine.ReturnStatus == ReturnStatusLine::Registered);
        #
        #            if (salesLine.RecId)
        #            {
        #                ttsbegin;
        #                salesTable = SalesTable::find(_salesId, true);
        #                salesTable.ReturnStatus = ReturnStatusHeader::Open;
        #                salesTable.update();
        #                ttscommit;
        #            }
        #            break;
        #
        #        case DocumentStatus::Invoice :
        #
        #            select firstonly RecId from salesLine where salesLine.SalesId       == _salesId &&
        #                                                (salesLine.ReturnStatus == ReturnStatusLine::Awaiting   ||
        #                                                 salesLine.ReturnStatus == ReturnStatusLine::None       ||
        #                                                 salesLine.ReturnStatus == ReturnStatusLine::Quarantine ||
        #                                                 salesLine.ReturnStatus == ReturnStatusLine::Received   ||
        #                                                 salesLine.ReturnStatus == ReturnStatusLine::Registered);
        #
        #            if (!salesLine.RecId)
        #            {
        #                ttsbegin;
        #                salesTable = SalesTable::find(_salesId, true);
        #                salesTable.ReturnStatus = ReturnStatusHeader::Closed;
        #                salesTable.update();
        #                ttscommit;
        #            }
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #returnUpdateReplacement
        #public static void returnUpdateReplacement(ReturnItemNum _returnItemNum, SalesId _replacementSalesId)
        #{
        #    SalesTable returnOrder;
        #    ;
        #
        #    ttsbegin;
        #    returnOrder = SalesTable::findReturnItemNum(_returnItemNum,true);
        #    returnOrder.ReturnReplacementCreated    = NoYes::Yes;
        #    returnOrder.ReturnReplacementId         = _replacementSalesId;
        #    returnOrder.update();
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #ReturnValidateReturnItemNum
        #/// <summary>
        #/// Validates the input to the Return order field.
        #/// </summary>
        #/// <param name="_returnItemNum">
        #/// A ReturnItemNum type.
        #/// </param>
        #/// <returns>
        #/// True if the Return order in question exists, otherwise false.
        #/// </returns>
        #// <summary>
        #/// Validates the input to the Return order field.
        #/// </summary>
        #/// <param name="_returnItemNum">
        #/// A ReturnItemNum type.
        #/// </param>
        #/// <returns>
        #/// True if the Return order in question exists, otherwise false.
        #/// True if the status of the Return order in question is either Created or Open, otherwise false.
        #/// </returns>
        #static boolean returnValidateReturnItemNum(ReturnItemNum _returnItemNum)
        #{
        #    boolean ret = true;
        #    SalesTable salesTable = SalesTable::findReturnItemNum(strltrim(_returnItemNum));
        #    ;
        #
        #    if (_returnItemNum && !salesTable.RecId)
        #    {
        #        //Return order %1 doesn't exists
        #        ret = checkFailed(strfmt("@SYS115108", _returnItemNum));
        #    }
        #
        #    if (ret)
        #    {
        #        if (salesTable.ReturnStatus == ReturnStatusHeader::Created || salesTable.ReturnStatus == ReturnStatusHeader::Open)
        #        {
        #            ret = true;
        #        }
        #        else
        #        {                           //Only Return orders with status %1 or %2 are legal input.
        #            ret = checkFailed(strfmt("@SYS123163", ReturnStatusHeader::Created, ReturnStatusHeader::Open));
        #        }
        #    }
        #
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #ShipCarrierPostPickup
        #static void shipCarrierPostPickup(SalesTable            _salesTable,
        #                                  DocumentStatus        _documentStatus,
        #                                  ShipCarrierDlvType    _dlvType2Post,
        #                                  boolean               _postAll)
        #{
        #    SalesFormLetter             salesFormLetter;
        #    SalesLine                   salesLine2Post;
        #    ;
        #
        #    if (_documentStatus != DocumentStatus::PackingSlip && _documentStatus != DocumentStatus::Invoice)
        #        return;
        #
        #    ttsbegin;
        #    if (!_postAll)
        #    {
        #        while select forupdate salesLine2Post
        #            where salesLine2Post.SalesId == _salesTable.SalesId
        #        {
        #            salesLine2Post.SalesDeliverNow  = 0;
        #
        #            if (salesLine2Post.ShipCarrierDlvType == _dlvType2Post)
        #            {
        #                if (_documentStatus == DocumentStatus::PackingSlip)
        #                {
        #                    salesLine2Post.SalesDeliverNow = salesLine2Post.SalesStatus == SalesStatus::Backorder ? salesLine2Post.RemainSalesPhysical : 0;
        #                }
        #                else if (_documentStatus == DocumentStatus::Invoice)
        #                {
        #                    salesLine2Post.SalesDeliverNow = salesLine2Post.SalesStatus == SalesStatus::Delivered ? salesLine2Post.RemainSalesFinancial : 0;
        #                }
        #            }
        #
        #            salesLine2Post.setInventDeliverNow();
        #            salesLine2Post.update();
        #        }
        #
        #    }
        #
        #    salesFormLetter = SalesFormLetter::construct(_documentStatus);
        #
        #    salesFormLetter.getLast();
        #    salesFormLetter.allowEmptyTable(salesFormLetter.initAllowEmptyTable(true));
        #
        #    salesFormLetter.transDate(systemdateget());
        #
        #    if (_postAll)
        #    {
        #        salesFormLetter.update(_salesTable, systemdateget(), SalesUpdate::All, AccountOrder::None, false, true);
        #    }
        #    else
        #    {
        #        salesFormLetter.update(_salesTable, systemdateget(), SalesUpdate::DeliverNow, AccountOrder::None, false, true);
        #    }
        #    ttscommit;
        #
        #    salesFormLetter.runShipCarrier();
        #
        #}
        #
      ENDSOURCE
      SOURCE #txtNotExist
        #static str  txtNotExist()
        #{
        #    return "@SYS15067";
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: END
